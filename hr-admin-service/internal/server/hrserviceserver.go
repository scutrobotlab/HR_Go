// Code generated by goctl. DO NOT EDIT.
// Source: admin.proto

package server

import (
	"context"

	"HR_Go/hr-admin-service/internal/logic"
	"HR_Go/hr-admin-service/internal/svc"
	"HR_Go/hr-admin-service/pb/hr-admin-service"
)

type HrServiceServer struct {
	svcCtx *svc.ServiceContext
	hr_admin_service.UnimplementedHrServiceServer
}

func NewHrServiceServer(svcCtx *svc.ServiceContext) *HrServiceServer {
	return &HrServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *HrServiceServer) Ping(ctx context.Context, in *hr_admin_service.PingRequest) (*hr_admin_service.PingResponse, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *HrServiceServer) SetApplicantAdmit(ctx context.Context, in *hr_admin_service.SetApplicantAdmitReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetApplicantAdmitLogic(ctx, s.svcCtx)
	return l.SetApplicantAdmit(in)
}

func (s *HrServiceServer) GetApplicants(ctx context.Context, in *hr_admin_service.GetApplicantsReq) (*hr_admin_service.GetApplicantsResp, error) {
	l := logic.NewGetApplicantsLogic(ctx, s.svcCtx)
	return l.GetApplicants(in)
}

func (s *HrServiceServer) GetApplicantInfo(ctx context.Context, in *hr_admin_service.ApplicantIdReq) (*hr_admin_service.GetApplicantInfoResp, error) {
	l := logic.NewGetApplicantInfoLogic(ctx, s.svcCtx)
	return l.GetApplicantInfo(in)
}

func (s *HrServiceServer) GetApplicantNameList(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetApplicantNameListResp, error) {
	l := logic.NewGetApplicantNameListLogic(ctx, s.svcCtx)
	return l.GetApplicantNameList(in)
}

func (s *HrServiceServer) GetApplicantScores(ctx context.Context, in *hr_admin_service.ApplicantIdReq) (*hr_admin_service.GetApplicantScoresResp, error) {
	l := logic.NewGetApplicantScoresLogic(ctx, s.svcCtx)
	return l.GetApplicantScores(in)
}

func (s *HrServiceServer) DeleteApplicant(ctx context.Context, in *hr_admin_service.ApplicantIdReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewDeleteApplicantLogic(ctx, s.svcCtx)
	return l.DeleteApplicant(in)
}

func (s *HrServiceServer) SetApplicantTimeExtend(ctx context.Context, in *hr_admin_service.SetApplicantTimeExtendReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetApplicantTimeExtendLogic(ctx, s.svcCtx)
	return l.SetApplicantTimeExtend(in)
}

func (s *HrServiceServer) AddEvaluation(ctx context.Context, in *hr_admin_service.AddEvaluationReq) (*hr_admin_service.AddEvaluationResp, error) {
	l := logic.NewAddEvaluationLogic(ctx, s.svcCtx)
	return l.AddEvaluation(in)
}

func (s *HrServiceServer) DeleteEvaluation(ctx context.Context, in *hr_admin_service.DeleteEvaluationReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewDeleteEvaluationLogic(ctx, s.svcCtx)
	return l.DeleteEvaluation(in)
}

func (s *HrServiceServer) UpdateEvaluation(ctx context.Context, in *hr_admin_service.UpdateEvaluationReq) (*hr_admin_service.UpdateEvaluationResp, error) {
	l := logic.NewUpdateEvaluationLogic(ctx, s.svcCtx)
	return l.UpdateEvaluation(in)
}

func (s *HrServiceServer) GetEvaluationInfo(ctx context.Context, in *hr_admin_service.GetEvaluationInfoReq) (*hr_admin_service.GetEvaluationInfoResp, error) {
	l := logic.NewGetEvaluationInfoLogic(ctx, s.svcCtx)
	return l.GetEvaluationInfo(in)
}

func (s *HrServiceServer) GetEvaluations(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetEvaluationsResp, error) {
	l := logic.NewGetEvaluationsLogic(ctx, s.svcCtx)
	return l.GetEvaluations(in)
}

func (s *HrServiceServer) CreateQuestion(ctx context.Context, in *hr_admin_service.CreateQuestionReq) (*hr_admin_service.CreateQuestionResp, error) {
	l := logic.NewCreateQuestionLogic(ctx, s.svcCtx)
	return l.CreateQuestion(in)
}

func (s *HrServiceServer) DeleteQuestion(ctx context.Context, in *hr_admin_service.DeleteQuestionReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewDeleteQuestionLogic(ctx, s.svcCtx)
	return l.DeleteQuestion(in)
}

func (s *HrServiceServer) UpdateQuestion(ctx context.Context, in *hr_admin_service.UpdateQuestionReq) (*hr_admin_service.UpdateQuestionResp, error) {
	l := logic.NewUpdateQuestionLogic(ctx, s.svcCtx)
	return l.UpdateQuestion(in)
}

func (s *HrServiceServer) GetQuestions(ctx context.Context, in *hr_admin_service.GetQuestionsReq) (*hr_admin_service.GetQuestionsResp, error) {
	l := logic.NewGetQuestionsLogic(ctx, s.svcCtx)
	return l.GetQuestions(in)
}

func (s *HrServiceServer) GetApplicantQuestions(ctx context.Context, in *hr_admin_service.ApplicantIdReq) (*hr_admin_service.GetApplicantQuestionsResp, error) {
	l := logic.NewGetApplicantQuestionsLogic(ctx, s.svcCtx)
	return l.GetApplicantQuestions(in)
}

func (s *HrServiceServer) AdminLogin(ctx context.Context, in *hr_admin_service.AdminLoginReq) (*hr_admin_service.AdminLoginResp, error) {
	l := logic.NewAdminLoginLogic(ctx, s.svcCtx)
	return l.AdminLogin(in)
}

func (s *HrServiceServer) AdminLogout(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewAdminLogoutLogic(ctx, s.svcCtx)
	return l.AdminLogout(in)
}

func (s *HrServiceServer) GetAdminInfo(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetAdminInfoResp, error) {
	l := logic.NewGetAdminInfoLogic(ctx, s.svcCtx)
	return l.GetAdminInfo(in)
}

func (s *HrServiceServer) SetDefaultStandard(ctx context.Context, in *hr_admin_service.SetDefaultStandardReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetDefaultStandardLogic(ctx, s.svcCtx)
	return l.SetDefaultStandard(in)
}

func (s *HrServiceServer) GetOAuthConfig(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetOAuthConfigResp, error) {
	l := logic.NewGetOAuthConfigLogic(ctx, s.svcCtx)
	return l.GetOAuthConfig(in)
}

func (s *HrServiceServer) GetFrontendConfig(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetFrontendConfigResp, error) {
	l := logic.NewGetFrontendConfigLogic(ctx, s.svcCtx)
	return l.GetFrontendConfig(in)
}

func (s *HrServiceServer) AdminLoginByPassword(ctx context.Context, in *hr_admin_service.AdminLoginByPasswordReq) (*hr_admin_service.AdminLoginResp, error) {
	l := logic.NewAdminLoginByPasswordLogic(ctx, s.svcCtx)
	return l.AdminLoginByPassword(in)
}

func (s *HrServiceServer) UpdateAdminPassword(ctx context.Context, in *hr_admin_service.UpdateAdminPasswordReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewUpdateAdminPasswordLogic(ctx, s.svcCtx)
	return l.UpdateAdminPassword(in)
}

func (s *HrServiceServer) CreateAdmin(ctx context.Context, in *hr_admin_service.CreateAdminReq) (*hr_admin_service.CreateAdminResp, error) {
	l := logic.NewCreateAdminLogic(ctx, s.svcCtx)
	return l.CreateAdmin(in)
}

func (s *HrServiceServer) UpdateAdmin(ctx context.Context, in *hr_admin_service.UpdateAdminReq) (*hr_admin_service.UpdateAdminResp, error) {
	l := logic.NewUpdateAdminLogic(ctx, s.svcCtx)
	return l.UpdateAdmin(in)
}

func (s *HrServiceServer) DeleteAdmin(ctx context.Context, in *hr_admin_service.DeleteAdminReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewDeleteAdminLogic(ctx, s.svcCtx)
	return l.DeleteAdmin(in)
}

func (s *HrServiceServer) GetRank(ctx context.Context, in *hr_admin_service.GetRankReq) (*hr_admin_service.GetRankResp, error) {
	l := logic.NewGetRankLogic(ctx, s.svcCtx)
	return l.GetRank(in)
}

func (s *HrServiceServer) GetScore(ctx context.Context, in *hr_admin_service.GetScoreReq) (*hr_admin_service.GetScoreResp, error) {
	l := logic.NewGetScoreLogic(ctx, s.svcCtx)
	return l.GetScore(in)
}

func (s *HrServiceServer) PostScore(ctx context.Context, in *hr_admin_service.PostScoreReq) (*hr_admin_service.PostScoreResp, error) {
	l := logic.NewPostScoreLogic(ctx, s.svcCtx)
	return l.PostScore(in)
}

func (s *HrServiceServer) DeleteScore(ctx context.Context, in *hr_admin_service.DeleteScoreReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewDeleteScoreLogic(ctx, s.svcCtx)
	return l.DeleteScore(in)
}

func (s *HrServiceServer) GetRemark(ctx context.Context, in *hr_admin_service.GetRemarkReq) (*hr_admin_service.GetRemarkResp, error) {
	l := logic.NewGetRemarkLogic(ctx, s.svcCtx)
	return l.GetRemark(in)
}

func (s *HrServiceServer) PostRemark(ctx context.Context, in *hr_admin_service.PostRemarkReq) (*hr_admin_service.PostRemarkResp, error) {
	l := logic.NewPostRemarkLogic(ctx, s.svcCtx)
	return l.PostRemark(in)
}

func (s *HrServiceServer) DeleteRemark(ctx context.Context, in *hr_admin_service.DeleteRemarkReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewDeleteRemarkLogic(ctx, s.svcCtx)
	return l.DeleteRemark(in)
}

func (s *HrServiceServer) GetRemarkList(ctx context.Context, in *hr_admin_service.GetRemarkListReq) (*hr_admin_service.GetRemarkListResp, error) {
	l := logic.NewGetRemarkListLogic(ctx, s.svcCtx)
	return l.GetRemarkList(in)
}

func (s *HrServiceServer) GetStatisticsClassify(ctx context.Context, in *hr_admin_service.GetStatisticsClassifyReq) (*hr_admin_service.GetStatisticsClassifyResp, error) {
	l := logic.NewGetStatisticsClassifyLogic(ctx, s.svcCtx)
	return l.GetStatisticsClassify(in)
}

func (s *HrServiceServer) GetStatisticsDailyNew(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetStatisticsDailyNewResp, error) {
	l := logic.NewGetStatisticsDailyNewLogic(ctx, s.svcCtx)
	return l.GetStatisticsDailyNew(in)
}

func (s *HrServiceServer) PostTimeConfig(ctx context.Context, in *hr_admin_service.PostTimeConfigReq) (*hr_admin_service.PostTimeConfigResp, error) {
	l := logic.NewPostTimeConfigLogic(ctx, s.svcCtx)
	return l.PostTimeConfig(in)
}

func (s *HrServiceServer) ExportTimes(ctx context.Context, in *hr_admin_service.ExportTimesReq) (*hr_admin_service.ExportTimesResp, error) {
	l := logic.NewExportTimesLogic(ctx, s.svcCtx)
	return l.ExportTimes(in)
}

func (s *HrServiceServer) UploadTimes(ctx context.Context, in *hr_admin_service.UploadTimesReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewUploadTimesLogic(ctx, s.svcCtx)
	return l.UploadTimes(in)
}

func (s *HrServiceServer) ClearTimes(ctx context.Context, in *hr_admin_service.ClearTimesReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewClearTimesLogic(ctx, s.svcCtx)
	return l.ClearTimes(in)
}

func (s *HrServiceServer) GetTimesStatistics(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetTimesStatisticsResp, error) {
	l := logic.NewGetTimesStatisticsLogic(ctx, s.svcCtx)
	return l.GetTimesStatistics(in)
}

func (s *HrServiceServer) GetSchedule(ctx context.Context, in *hr_admin_service.GetScheduleReq) (*hr_admin_service.GetScheduleResp, error) {
	l := logic.NewGetScheduleLogic(ctx, s.svcCtx)
	return l.GetSchedule(in)
}

func (s *HrServiceServer) GetSmsConfig(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetSmsConfigResp, error) {
	l := logic.NewGetSmsConfigLogic(ctx, s.svcCtx)
	return l.GetSmsConfig(in)
}

func (s *HrServiceServer) GetApplicantSms(ctx context.Context, in *hr_admin_service.GetApplicantSmsReq) (*hr_admin_service.GetApplicantSmsResp, error) {
	l := logic.NewGetApplicantSmsLogic(ctx, s.svcCtx)
	return l.GetApplicantSms(in)
}

func (s *HrServiceServer) SendSms(ctx context.Context, in *hr_admin_service.SendSmsReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSendSmsLogic(ctx, s.svcCtx)
	return l.SendSms(in)
}

func (s *HrServiceServer) GetHistorySms(ctx context.Context, in *hr_admin_service.ApplicantIdReq) (*hr_admin_service.GetHistorySmsResp, error) {
	l := logic.NewGetHistorySmsLogic(ctx, s.svcCtx)
	return l.GetHistorySms(in)
}

func (s *HrServiceServer) ReceiveSms(ctx context.Context, in *hr_admin_service.ReceiveSmsReq) (*hr_admin_service.ReceiveSmsResp, error) {
	l := logic.NewReceiveSmsLogic(ctx, s.svcCtx)
	return l.ReceiveSms(in)
}

func (s *HrServiceServer) GetConfig(ctx context.Context, in *hr_admin_service.GetConfigReq) (*hr_admin_service.GetConfigResp, error) {
	l := logic.NewGetConfigLogic(ctx, s.svcCtx)
	return l.GetConfig(in)
}

func (s *HrServiceServer) UpdateConfig(ctx context.Context, in *hr_admin_service.UpdateConfigReq) (*hr_admin_service.UpdateConfigResp, error) {
	l := logic.NewUpdateConfigLogic(ctx, s.svcCtx)
	return l.UpdateConfig(in)
}

func (s *HrServiceServer) GetSmsServiceConfig(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetSmsServiceConfigResp, error) {
	l := logic.NewGetSmsServiceConfigLogic(ctx, s.svcCtx)
	return l.GetSmsServiceConfig(in)
}

func (s *HrServiceServer) GetAllRoom(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetAllRoomResp, error) {
	l := logic.NewGetAllRoomLogic(ctx, s.svcCtx)
	return l.GetAllRoom(in)
}

func (s *HrServiceServer) SetMyRoom(ctx context.Context, in *hr_admin_service.SetMyRoomReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetMyRoomLogic(ctx, s.svcCtx)
	return l.SetMyRoom(in)
}

func (s *HrServiceServer) GetPushableList(ctx context.Context, in *hr_admin_service.AdminIdReq) (*hr_admin_service.GetPushableListResp, error) {
	l := logic.NewGetPushableListLogic(ctx, s.svcCtx)
	return l.GetPushableList(in)
}

func (s *HrServiceServer) PushApplicant(ctx context.Context, in *hr_admin_service.PushApplicantReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewPushApplicantLogic(ctx, s.svcCtx)
	return l.PushApplicant(in)
}

func (s *HrServiceServer) SetRoomStatus(ctx context.Context, in *hr_admin_service.SetRoomStatusReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetRoomStatusLogic(ctx, s.svcCtx)
	return l.SetRoomStatus(in)
}

func (s *HrServiceServer) SetRoomComment(ctx context.Context, in *hr_admin_service.SetRoomCommentReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetRoomCommentLogic(ctx, s.svcCtx)
	return l.SetRoomComment(in)
}

func (s *HrServiceServer) SetRoomGroup(ctx context.Context, in *hr_admin_service.SetRoomGroupReq) (*hr_admin_service.StatusResp, error) {
	l := logic.NewSetRoomGroupLogic(ctx, s.svcCtx)
	return l.SetRoomGroup(in)
}
