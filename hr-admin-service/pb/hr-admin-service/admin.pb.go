// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: admin.proto

package hr_admin_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type AdminIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId int64 `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *AdminIdReq) Reset() {
	*x = AdminIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminIdReq) ProtoMessage() {}

func (x *AdminIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminIdReq.ProtoReflect.Descriptor instead.
func (*AdminIdReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AdminIdReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type ApplicantIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64 `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
}

func (x *ApplicantIdReq) Reset() {
	*x = ApplicantIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicantIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicantIdReq) ProtoMessage() {}

func (x *ApplicantIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicantIdReq.ProtoReflect.Descriptor instead.
func (*ApplicantIdReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicantIdReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

type StatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *StatusResp) Reset() {
	*x = StatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResp) ProtoMessage() {}

func (x *StatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResp.ProtoReflect.Descriptor instead.
func (*StatusResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *StatusResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type SetApplicantAdmitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Admit       bool   `protobuf:"varint,3,opt,name=admit,proto3" json:"admit,omitempty"`
	AdminId     int64  `protobuf:"varint,4,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *SetApplicantAdmitReq) Reset() {
	*x = SetApplicantAdmitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetApplicantAdmitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetApplicantAdmitReq) ProtoMessage() {}

func (x *SetApplicantAdmitReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetApplicantAdmitReq.ProtoReflect.Descriptor instead.
func (*SetApplicantAdmitReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

func (x *SetApplicantAdmitReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *SetApplicantAdmitReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *SetApplicantAdmitReq) GetAdmit() bool {
	if x != nil {
		return x.Admit
	}
	return false
}

func (x *SetApplicantAdmitReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type GetApplicantsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Page  int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetApplicantsReq) Reset() {
	*x = GetApplicantsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantsReq) ProtoMessage() {}

func (x *GetApplicantsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantsReq.ProtoReflect.Descriptor instead.
func (*GetApplicantsReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *GetApplicantsReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetApplicantsReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetApplicantsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type Intent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group       string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	ApplicantId int64  `protobuf:"varint,2,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Rank        int32  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Parallel    int32  `protobuf:"varint,4,opt,name=parallel,proto3" json:"parallel,omitempty"`
}

func (x *Intent) Reset() {
	*x = Intent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Intent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent) ProtoMessage() {}

func (x *Intent) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent.ProtoReflect.Descriptor instead.
func (*Intent) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *Intent) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Intent) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *Intent) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Intent) GetParallel() int32 {
	if x != nil {
		return x.Parallel
	}
	return 0
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Group           string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Date            string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Time            string `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Rank            int32  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	Location        string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	TotalCnt        int32  `protobuf:"varint,7,opt,name=totalCnt,proto3" json:"totalCnt,omitempty"`
	Grade           string `protobuf:"bytes,8,opt,name=grade,proto3" json:"grade,omitempty"`
	Campus          string `protobuf:"bytes,9,opt,name=campus,proto3" json:"campus,omitempty"`
	ApplicantId     int64  `protobuf:"varint,10,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Extend          string `protobuf:"bytes,11,opt,name=extend,proto3" json:"extend,omitempty"`
	ApplicantTimeId int64  `protobuf:"varint,12,opt,name=applicantTimeId,proto3" json:"applicantTimeId,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *Time) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Time) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Time) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Time) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Time) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Time) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Time) GetTotalCnt() int32 {
	if x != nil {
		return x.TotalCnt
	}
	return 0
}

func (x *Time) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *Time) GetCampus() string {
	if x != nil {
		return x.Campus
	}
	return ""
}

func (x *Time) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *Time) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *Time) GetApplicantTimeId() int64 {
	if x != nil {
		return x.ApplicantTimeId
	}
	return 0
}

type AbstractAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DefaultStandardId int64  `protobuf:"varint,3,opt,name=defaultStandardId,proto3" json:"defaultStandardId,omitempty"`
}

func (x *AbstractAdmin) Reset() {
	*x = AbstractAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbstractAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbstractAdmin) ProtoMessage() {}

func (x *AbstractAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbstractAdmin.ProtoReflect.Descriptor instead.
func (*AbstractAdmin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

func (x *AbstractAdmin) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AbstractAdmin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AbstractAdmin) GetDefaultStandardId() int64 {
	if x != nil {
		return x.DefaultStandardId
	}
	return 0
}

type Admit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId     int64          `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	ApplicantId int64          `protobuf:"varint,2,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Group       string         `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Admin       *AbstractAdmin `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	UpdatedAt   string         `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Admit) Reset() {
	*x = Admit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admit) ProtoMessage() {}

func (x *Admit) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admit.ProtoReflect.Descriptor instead.
func (*Admit) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

func (x *Admit) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *Admit) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *Admit) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Admit) GetAdmin() *AbstractAdmin {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *Admit) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Applicant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WechatId  string    `protobuf:"bytes,2,opt,name=wechatId,proto3" json:"wechatId,omitempty"`
	Name      string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gender    string    `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Phone     string    `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Avatar    string    `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Form      string    `protobuf:"bytes,7,opt,name=form,proto3" json:"form,omitempty"`
	Intents   []*Intent `protobuf:"bytes,8,rep,name=intents,proto3" json:"intents,omitempty"`
	Times     []*Time   `protobuf:"bytes,9,rep,name=times,proto3" json:"times,omitempty"`
	Admits    []*Admit  `protobuf:"bytes,10,rep,name=admits,proto3" json:"admits,omitempty"`
	CreatedAt string    `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string    `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Applicant) Reset() {
	*x = Applicant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Applicant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Applicant) ProtoMessage() {}

func (x *Applicant) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Applicant.ProtoReflect.Descriptor instead.
func (*Applicant) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{11}
}

func (x *Applicant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Applicant) GetWechatId() string {
	if x != nil {
		return x.WechatId
	}
	return ""
}

func (x *Applicant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Applicant) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Applicant) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Applicant) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Applicant) GetForm() string {
	if x != nil {
		return x.Form
	}
	return ""
}

func (x *Applicant) GetIntents() []*Intent {
	if x != nil {
		return x.Intents
	}
	return nil
}

func (x *Applicant) GetTimes() []*Time {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *Applicant) GetAdmits() []*Admit {
	if x != nil {
		return x.Admits
	}
	return nil
}

func (x *Applicant) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Applicant) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Label  string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Active bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{12}
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Link) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Link) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ApplicantListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender      string   `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Avatar      string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ScoresCount int32    `protobuf:"varint,5,opt,name=scoresCount,proto3" json:"scoresCount,omitempty"`
	AvgScore    float32  `protobuf:"fixed32,6,opt,name=avgScore,proto3" json:"avgScore,omitempty"`
	Date        string   `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Time        string   `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	Location    string   `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	Extend      string   `protobuf:"bytes,10,opt,name=extend,proto3" json:"extend,omitempty"`
	Admits      []*Admit `protobuf:"bytes,11,rep,name=admits,proto3" json:"admits,omitempty"`
}

func (x *ApplicantListItem) Reset() {
	*x = ApplicantListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicantListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicantListItem) ProtoMessage() {}

func (x *ApplicantListItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicantListItem.ProtoReflect.Descriptor instead.
func (*ApplicantListItem) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{13}
}

func (x *ApplicantListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApplicantListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicantListItem) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *ApplicantListItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ApplicantListItem) GetScoresCount() int32 {
	if x != nil {
		return x.ScoresCount
	}
	return 0
}

func (x *ApplicantListItem) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

func (x *ApplicantListItem) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ApplicantListItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ApplicantListItem) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ApplicantListItem) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *ApplicantListItem) GetAdmits() []*Admit {
	if x != nil {
		return x.Admits
	}
	return nil
}

type GetApplicantsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage  int32                `protobuf:"varint,1,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	Data         []*ApplicantListItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	FirstPageUrl string               `protobuf:"bytes,3,opt,name=firstPageUrl,proto3" json:"firstPageUrl,omitempty"`
	LastPage     int32                `protobuf:"varint,4,opt,name=lastPage,proto3" json:"lastPage,omitempty"`
	LastPageUrl  string               `protobuf:"bytes,5,opt,name=lastPageUrl,proto3" json:"lastPageUrl,omitempty"`
	Links        []*Link              `protobuf:"bytes,6,rep,name=links,proto3" json:"links,omitempty"`
	NextPageUrl  string               `protobuf:"bytes,7,opt,name=nextPageUrl,proto3" json:"nextPageUrl,omitempty"`
	Path         string               `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	PerPage      int32                `protobuf:"varint,9,opt,name=perPage,proto3" json:"perPage,omitempty"`
	PrevPageUrl  string               `protobuf:"bytes,10,opt,name=prevPageUrl,proto3" json:"prevPageUrl,omitempty"`
	From         int32                `protobuf:"varint,11,opt,name=from,proto3" json:"from,omitempty"`
	To           int32                `protobuf:"varint,12,opt,name=to,proto3" json:"to,omitempty"`
	Total        int32                `protobuf:"varint,13,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetApplicantsResp) Reset() {
	*x = GetApplicantsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantsResp) ProtoMessage() {}

func (x *GetApplicantsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantsResp.ProtoReflect.Descriptor instead.
func (*GetApplicantsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{14}
}

func (x *GetApplicantsResp) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *GetApplicantsResp) GetData() []*ApplicantListItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetApplicantsResp) GetFirstPageUrl() string {
	if x != nil {
		return x.FirstPageUrl
	}
	return ""
}

func (x *GetApplicantsResp) GetLastPage() int32 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *GetApplicantsResp) GetLastPageUrl() string {
	if x != nil {
		return x.LastPageUrl
	}
	return ""
}

func (x *GetApplicantsResp) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *GetApplicantsResp) GetNextPageUrl() string {
	if x != nil {
		return x.NextPageUrl
	}
	return ""
}

func (x *GetApplicantsResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetApplicantsResp) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetApplicantsResp) GetPrevPageUrl() string {
	if x != nil {
		return x.PrevPageUrl
	}
	return ""
}

func (x *GetApplicantsResp) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetApplicantsResp) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *GetApplicantsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetApplicantInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applicant *Applicant `protobuf:"bytes,1,opt,name=applicant,proto3" json:"applicant,omitempty"`
}

func (x *GetApplicantInfoResp) Reset() {
	*x = GetApplicantInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantInfoResp) ProtoMessage() {}

func (x *GetApplicantInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantInfoResp.ProtoReflect.Descriptor instead.
func (*GetApplicantInfoResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{15}
}

func (x *GetApplicantInfoResp) GetApplicant() *Applicant {
	if x != nil {
		return x.Applicant
	}
	return nil
}

type NameListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NameListItem) Reset() {
	*x = NameListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameListItem) ProtoMessage() {}

func (x *NameListItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameListItem.ProtoReflect.Descriptor instead.
func (*NameListItem) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{16}
}

func (x *NameListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NameListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetApplicantNameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameList []*NameListItem `protobuf:"bytes,1,rep,name=nameList,proto3" json:"nameList,omitempty"`
}

func (x *GetApplicantNameListResp) Reset() {
	*x = GetApplicantNameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantNameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantNameListResp) ProtoMessage() {}

func (x *GetApplicantNameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantNameListResp.ProtoReflect.Descriptor instead.
func (*GetApplicantNameListResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{17}
}

func (x *GetApplicantNameListResp) GetNameList() []*NameListItem {
	if x != nil {
		return x.NameList
	}
	return nil
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId          int64          `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	ApplicantId      int64          `protobuf:"varint,2,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Group            string         `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Score            float64        `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	StandardId       int64          `protobuf:"varint,5,opt,name=standardId,proto3" json:"standardId,omitempty"`
	EvaluationDetail string         `protobuf:"bytes,6,opt,name=evaluationDetail,proto3" json:"evaluationDetail,omitempty"`
	Admin            *AbstractAdmin `protobuf:"bytes,7,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{18}
}

func (x *Score) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *Score) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *Score) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Score) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Score) GetStandardId() int64 {
	if x != nil {
		return x.StandardId
	}
	return 0
}

func (x *Score) GetEvaluationDetail() string {
	if x != nil {
		return x.EvaluationDetail
	}
	return ""
}

func (x *Score) GetAdmin() *AbstractAdmin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type GetApplicantScoresResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []*Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *GetApplicantScoresResp) Reset() {
	*x = GetApplicantScoresResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantScoresResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantScoresResp) ProtoMessage() {}

func (x *GetApplicantScoresResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantScoresResp.ProtoReflect.Descriptor instead.
func (*GetApplicantScoresResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{19}
}

func (x *GetApplicantScoresResp) GetScores() []*Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type DeleteApplicantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64 `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
}

func (x *DeleteApplicantReq) Reset() {
	*x = DeleteApplicantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApplicantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicantReq) ProtoMessage() {}

func (x *DeleteApplicantReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicantReq.ProtoReflect.Descriptor instead.
func (*DeleteApplicantReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteApplicantReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

type Standard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weight int32  `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Standard) Reset() {
	*x = Standard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Standard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Standard) ProtoMessage() {}

func (x *Standard) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Standard.ProtoReflect.Descriptor instead.
func (*Standard) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{21}
}

func (x *Standard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Standard) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type AddEvaluationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Standard []*Standard `protobuf:"bytes,2,rep,name=standard,proto3" json:"standard,omitempty"`
	AdminId  int64       `protobuf:"varint,3,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *AddEvaluationReq) Reset() {
	*x = AddEvaluationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEvaluationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEvaluationReq) ProtoMessage() {}

func (x *AddEvaluationReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEvaluationReq.ProtoReflect.Descriptor instead.
func (*AddEvaluationReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{22}
}

func (x *AddEvaluationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddEvaluationReq) GetStandard() []*Standard {
	if x != nil {
		return x.Standard
	}
	return nil
}

func (x *AddEvaluationReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type Evaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ScoresCount int32          `protobuf:"varint,3,opt,name=scoresCount,proto3" json:"scoresCount,omitempty"`
	UpdatedById int64          `protobuf:"varint,4,opt,name=updatedById,proto3" json:"updatedById,omitempty"`
	UpdatedBy   *AbstractAdmin `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Standard    []*Standard    `protobuf:"bytes,6,rep,name=standard,proto3" json:"standard,omitempty"`
	UpdatedAt   string         `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Evaluation) Reset() {
	*x = Evaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evaluation) ProtoMessage() {}

func (x *Evaluation) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evaluation.ProtoReflect.Descriptor instead.
func (*Evaluation) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{23}
}

func (x *Evaluation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Evaluation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Evaluation) GetScoresCount() int32 {
	if x != nil {
		return x.ScoresCount
	}
	return 0
}

func (x *Evaluation) GetUpdatedById() int64 {
	if x != nil {
		return x.UpdatedById
	}
	return 0
}

func (x *Evaluation) GetUpdatedBy() *AbstractAdmin {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *Evaluation) GetStandard() []*Standard {
	if x != nil {
		return x.Standard
	}
	return nil
}

func (x *Evaluation) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AddEvaluationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evaluation *Evaluation `protobuf:"bytes,1,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
}

func (x *AddEvaluationResp) Reset() {
	*x = AddEvaluationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEvaluationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEvaluationResp) ProtoMessage() {}

func (x *AddEvaluationResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEvaluationResp.ProtoReflect.Descriptor instead.
func (*AddEvaluationResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{24}
}

func (x *AddEvaluationResp) GetEvaluation() *Evaluation {
	if x != nil {
		return x.Evaluation
	}
	return nil
}

type DeleteEvaluationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvaluationId int64 `protobuf:"varint,1,opt,name=evaluationId,proto3" json:"evaluationId,omitempty"`
}

func (x *DeleteEvaluationReq) Reset() {
	*x = DeleteEvaluationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEvaluationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEvaluationReq) ProtoMessage() {}

func (x *DeleteEvaluationReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEvaluationReq.ProtoReflect.Descriptor instead.
func (*DeleteEvaluationReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteEvaluationReq) GetEvaluationId() int64 {
	if x != nil {
		return x.EvaluationId
	}
	return 0
}

type UpdateEvaluationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvaluationId int64       `protobuf:"varint,1,opt,name=evaluationId,proto3" json:"evaluationId,omitempty"`
	Name         string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Standard     []*Standard `protobuf:"bytes,3,rep,name=standard,proto3" json:"standard,omitempty"`
	AdminId      int64       `protobuf:"varint,4,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *UpdateEvaluationReq) Reset() {
	*x = UpdateEvaluationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEvaluationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEvaluationReq) ProtoMessage() {}

func (x *UpdateEvaluationReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEvaluationReq.ProtoReflect.Descriptor instead.
func (*UpdateEvaluationReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateEvaluationReq) GetEvaluationId() int64 {
	if x != nil {
		return x.EvaluationId
	}
	return 0
}

func (x *UpdateEvaluationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEvaluationReq) GetStandard() []*Standard {
	if x != nil {
		return x.Standard
	}
	return nil
}

func (x *UpdateEvaluationReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type UpdateEvaluationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evaluation *Evaluation `protobuf:"bytes,1,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
}

func (x *UpdateEvaluationResp) Reset() {
	*x = UpdateEvaluationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEvaluationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEvaluationResp) ProtoMessage() {}

func (x *UpdateEvaluationResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEvaluationResp.ProtoReflect.Descriptor instead.
func (*UpdateEvaluationResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateEvaluationResp) GetEvaluation() *Evaluation {
	if x != nil {
		return x.Evaluation
	}
	return nil
}

type GetEvaluationInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvaluationId int64 `protobuf:"varint,1,opt,name=evaluationId,proto3" json:"evaluationId,omitempty"`
}

func (x *GetEvaluationInfoReq) Reset() {
	*x = GetEvaluationInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationInfoReq) ProtoMessage() {}

func (x *GetEvaluationInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationInfoReq.ProtoReflect.Descriptor instead.
func (*GetEvaluationInfoReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{28}
}

func (x *GetEvaluationInfoReq) GetEvaluationId() int64 {
	if x != nil {
		return x.EvaluationId
	}
	return 0
}

type GetEvaluationInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evaluation *Evaluation `protobuf:"bytes,1,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
}

func (x *GetEvaluationInfoResp) Reset() {
	*x = GetEvaluationInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationInfoResp) ProtoMessage() {}

func (x *GetEvaluationInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationInfoResp.ProtoReflect.Descriptor instead.
func (*GetEvaluationInfoResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{29}
}

func (x *GetEvaluationInfoResp) GetEvaluation() *Evaluation {
	if x != nil {
		return x.Evaluation
	}
	return nil
}

type GetEvaluationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evaluations []*Evaluation `protobuf:"bytes,1,rep,name=evaluations,proto3" json:"evaluations,omitempty"`
}

func (x *GetEvaluationsResp) Reset() {
	*x = GetEvaluationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEvaluationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEvaluationsResp) ProtoMessage() {}

func (x *GetEvaluationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEvaluationsResp.ProtoReflect.Descriptor instead.
func (*GetEvaluationsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{30}
}

func (x *GetEvaluationsResp) GetEvaluations() []*Evaluation {
	if x != nil {
		return x.Evaluations
	}
	return nil
}

type CreateQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *CreateQuestionReq) Reset() {
	*x = CreateQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionReq) ProtoMessage() {}

func (x *CreateQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionReq.ProtoReflect.Descriptor instead.
func (*CreateQuestionReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{31}
}

func (x *CreateQuestionReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CreateQuestionReq) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Group    string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Question string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{32}
}

func (x *Question) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Question) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type QuestionAndAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Group    string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Question string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *QuestionAndAnswer) Reset() {
	*x = QuestionAndAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionAndAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionAndAnswer) ProtoMessage() {}

func (x *QuestionAndAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionAndAnswer.ProtoReflect.Descriptor instead.
func (*QuestionAndAnswer) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{33}
}

func (x *QuestionAndAnswer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionAndAnswer) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *QuestionAndAnswer) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionAndAnswer) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type CreateQuestionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *Question `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *CreateQuestionResp) Reset() {
	*x = CreateQuestionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionResp) ProtoMessage() {}

func (x *CreateQuestionResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionResp.ProtoReflect.Descriptor instead.
func (*CreateQuestionResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{34}
}

func (x *CreateQuestionResp) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type DeleteQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64 `protobuf:"varint,1,opt,name=questionId,proto3" json:"questionId,omitempty"`
}

func (x *DeleteQuestionReq) Reset() {
	*x = DeleteQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionReq) ProtoMessage() {}

func (x *DeleteQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionReq.ProtoReflect.Descriptor instead.
func (*DeleteQuestionReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteQuestionReq) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type UpdateQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *Question `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *UpdateQuestionReq) Reset() {
	*x = UpdateQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionReq) ProtoMessage() {}

func (x *UpdateQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionReq.ProtoReflect.Descriptor instead.
func (*UpdateQuestionReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateQuestionReq) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type UpdateQuestionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *Question `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *UpdateQuestionResp) Reset() {
	*x = UpdateQuestionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionResp) ProtoMessage() {}

func (x *UpdateQuestionResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionResp.ProtoReflect.Descriptor instead.
func (*UpdateQuestionResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateQuestionResp) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type GetQuestionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetQuestionsReq) Reset() {
	*x = GetQuestionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsReq) ProtoMessage() {}

func (x *GetQuestionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsReq.ProtoReflect.Descriptor instead.
func (*GetQuestionsReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{38}
}

func (x *GetQuestionsReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetQuestionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*Question `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuestionsResp) Reset() {
	*x = GetQuestionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsResp) ProtoMessage() {}

func (x *GetQuestionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsResp.ProtoReflect.Descriptor instead.
func (*GetQuestionsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{39}
}

func (x *GetQuestionsResp) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type AdminLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AdminLoginReq) Reset() {
	*x = AdminLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginReq) ProtoMessage() {}

func (x *AdminLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginReq.ProtoReflect.Descriptor instead.
func (*AdminLoginReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{40}
}

func (x *AdminLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AdminGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Power int32  `protobuf:"varint,3,opt,name=power,proto3" json:"power,omitempty"`
}

func (x *AdminGroup) Reset() {
	*x = AdminGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGroup) ProtoMessage() {}

func (x *AdminGroup) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGroup.ProtoReflect.Descriptor instead.
func (*AdminGroup) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{41}
}

func (x *AdminGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminGroup) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

type Admin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uuid              string        `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Email             string        `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Avatar            string        `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Groups            []*AdminGroup `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups,omitempty"`
	DefaultStandardId int64         `protobuf:"varint,7,opt,name=defaultStandardId,proto3" json:"defaultStandardId,omitempty"`
	SmsEnabled        bool          `protobuf:"varint,8,opt,name=smsEnabled,proto3" json:"smsEnabled,omitempty"`
}

func (x *Admin) Reset() {
	*x = Admin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admin) ProtoMessage() {}

func (x *Admin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admin.ProtoReflect.Descriptor instead.
func (*Admin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{42}
}

func (x *Admin) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Admin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Admin) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Admin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Admin) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Admin) GetGroups() []*AdminGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Admin) GetDefaultStandardId() int64 {
	if x != nil {
		return x.DefaultStandardId
	}
	return 0
}

func (x *Admin) GetSmsEnabled() bool {
	if x != nil {
		return x.SmsEnabled
	}
	return false
}

type AdminLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admin *Admin `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *AdminLoginResp) Reset() {
	*x = AdminLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginResp) ProtoMessage() {}

func (x *AdminLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginResp.ProtoReflect.Descriptor instead.
func (*AdminLoginResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{43}
}

func (x *AdminLoginResp) GetAdmin() *Admin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type GetAdminInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admin *Admin `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *GetAdminInfoResp) Reset() {
	*x = GetAdminInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminInfoResp) ProtoMessage() {}

func (x *GetAdminInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminInfoResp.ProtoReflect.Descriptor instead.
func (*GetAdminInfoResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{44}
}

func (x *GetAdminInfoResp) GetAdmin() *Admin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type SetDefaultStandardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId    int64 `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	StandardId int64 `protobuf:"varint,2,opt,name=standardId,proto3" json:"standardId,omitempty"`
}

func (x *SetDefaultStandardReq) Reset() {
	*x = SetDefaultStandardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultStandardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultStandardReq) ProtoMessage() {}

func (x *SetDefaultStandardReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultStandardReq.ProtoReflect.Descriptor instead.
func (*SetDefaultStandardReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{45}
}

func (x *SetDefaultStandardReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *SetDefaultStandardReq) GetStandardId() int64 {
	if x != nil {
		return x.StandardId
	}
	return 0
}

type GetRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetRankReq) Reset() {
	*x = GetRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankReq) ProtoMessage() {}

func (x *GetRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankReq.ProtoReflect.Descriptor instead.
func (*GetRankReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{46}
}

func (x *GetRankReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *GetRankReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetRankResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank  int32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetRankResp) Reset() {
	*x = GetRankResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRankResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankResp) ProtoMessage() {}

func (x *GetRankResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankResp.ProtoReflect.Descriptor instead.
func (*GetRankResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{47}
}

func (x *GetRankResp) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GetRankResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64  `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Group       string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetScoreReq) Reset() {
	*x = GetScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoreReq) ProtoMessage() {}

func (x *GetScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoreReq.ProtoReflect.Descriptor instead.
func (*GetScoreReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{48}
}

func (x *GetScoreReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *GetScoreReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *GetScoreReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetScoreResp) Reset() {
	*x = GetScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoreResp) ProtoMessage() {}

func (x *GetScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoreResp.ProtoReflect.Descriptor instead.
func (*GetScoreResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{49}
}

func (x *GetScoreResp) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type PostScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId       int64   `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Score             float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	Group             string  `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	StandardId        int64   `protobuf:"varint,4,opt,name=standardId,proto3" json:"standardId,omitempty"`
	EvaluationDetails string  `protobuf:"bytes,5,opt,name=evaluationDetails,proto3" json:"evaluationDetails,omitempty"`
	AdminId           int64   `protobuf:"varint,6,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *PostScoreReq) Reset() {
	*x = PostScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostScoreReq) ProtoMessage() {}

func (x *PostScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostScoreReq.ProtoReflect.Descriptor instead.
func (*PostScoreReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{50}
}

func (x *PostScoreReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *PostScoreReq) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PostScoreReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *PostScoreReq) GetStandardId() int64 {
	if x != nil {
		return x.StandardId
	}
	return 0
}

func (x *PostScoreReq) GetEvaluationDetails() string {
	if x != nil {
		return x.EvaluationDetails
	}
	return ""
}

func (x *PostScoreReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type PostScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *Score `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *PostScoreResp) Reset() {
	*x = PostScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostScoreResp) ProtoMessage() {}

func (x *PostScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostScoreResp.ProtoReflect.Descriptor instead.
func (*PostScoreResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{51}
}

func (x *PostScoreResp) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type DeleteScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Group       string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	AdminId     int64  `protobuf:"varint,3,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *DeleteScoreReq) Reset() {
	*x = DeleteScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScoreReq) ProtoMessage() {}

func (x *DeleteScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScoreReq.ProtoReflect.Descriptor instead.
func (*DeleteScoreReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteScoreReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *DeleteScoreReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DeleteScoreReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type GetRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64 `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64 `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *GetRemarkReq) Reset() {
	*x = GetRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemarkReq) ProtoMessage() {}

func (x *GetRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemarkReq.ProtoReflect.Descriptor instead.
func (*GetRemarkReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{53}
}

func (x *GetRemarkReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *GetRemarkReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type GetRemarkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64  `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *GetRemarkResp) Reset() {
	*x = GetRemarkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemarkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemarkResp) ProtoMessage() {}

func (x *GetRemarkResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemarkResp.ProtoReflect.Descriptor instead.
func (*GetRemarkResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{54}
}

func (x *GetRemarkResp) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *GetRemarkResp) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *GetRemarkResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type PostRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64  `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *PostRemarkReq) Reset() {
	*x = PostRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRemarkReq) ProtoMessage() {}

func (x *PostRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRemarkReq.ProtoReflect.Descriptor instead.
func (*PostRemarkReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{55}
}

func (x *PostRemarkReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *PostRemarkReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *PostRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type PostRemarkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64  `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *PostRemarkResp) Reset() {
	*x = PostRemarkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRemarkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRemarkResp) ProtoMessage() {}

func (x *PostRemarkResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRemarkResp.ProtoReflect.Descriptor instead.
func (*PostRemarkResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{56}
}

func (x *PostRemarkResp) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *PostRemarkResp) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *PostRemarkResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DeleteRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64 `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64 `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *DeleteRemarkReq) Reset() {
	*x = DeleteRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRemarkReq) ProtoMessage() {}

func (x *DeleteRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRemarkReq.ProtoReflect.Descriptor instead.
func (*DeleteRemarkReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteRemarkReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *DeleteRemarkReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type GetStatisticsClassifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetStatisticsClassifyReq) Reset() {
	*x = GetStatisticsClassifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsClassifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsClassifyReq) ProtoMessage() {}

func (x *GetStatisticsClassifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsClassifyReq.ProtoReflect.Descriptor instead.
func (*GetStatisticsClassifyReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{58}
}

func (x *GetStatisticsClassifyReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetStatisticsClassifyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StatisticsClassify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StatisticsClassify) Reset() {
	*x = StatisticsClassify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsClassify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsClassify) ProtoMessage() {}

func (x *StatisticsClassify) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsClassify.ProtoReflect.Descriptor instead.
func (*StatisticsClassify) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{59}
}

func (x *StatisticsClassify) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StatisticsClassify) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetStatisticsClassifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class []*StatisticsClassify `protobuf:"bytes,1,rep,name=class,proto3" json:"class,omitempty"`
}

func (x *GetStatisticsClassifyResp) Reset() {
	*x = GetStatisticsClassifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsClassifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsClassifyResp) ProtoMessage() {}

func (x *GetStatisticsClassifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsClassifyResp.ProtoReflect.Descriptor instead.
func (*GetStatisticsClassifyResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{60}
}

func (x *GetStatisticsClassifyResp) GetClass() []*StatisticsClassify {
	if x != nil {
		return x.Class
	}
	return nil
}

type StatisticsDaily struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StatisticsDaily) Reset() {
	*x = StatisticsDaily{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsDaily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsDaily) ProtoMessage() {}

func (x *StatisticsDaily) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsDaily.ProtoReflect.Descriptor instead.
func (*StatisticsDaily) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{61}
}

func (x *StatisticsDaily) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *StatisticsDaily) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetStatisticsDailyNewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applicants []*StatisticsDaily `protobuf:"bytes,1,rep,name=applicants,proto3" json:"applicants,omitempty"`
}

func (x *GetStatisticsDailyNewResp) Reset() {
	*x = GetStatisticsDailyNewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsDailyNewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsDailyNewResp) ProtoMessage() {}

func (x *GetStatisticsDailyNewResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsDailyNewResp.ProtoReflect.Descriptor instead.
func (*GetStatisticsDailyNewResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{62}
}

func (x *GetStatisticsDailyNewResp) GetApplicants() []*StatisticsDaily {
	if x != nil {
		return x.Applicants
	}
	return nil
}

type TimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TimeConfig) Reset() {
	*x = TimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeConfig) ProtoMessage() {}

func (x *TimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeConfig.ProtoReflect.Descriptor instead.
func (*TimeConfig) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{63}
}

func (x *TimeConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TimeConfig) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PostTimeConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeConfigs []*TimeConfig `protobuf:"bytes,1,rep,name=timeConfigs,proto3" json:"timeConfigs,omitempty"`
}

func (x *PostTimeConfigReq) Reset() {
	*x = PostTimeConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTimeConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTimeConfigReq) ProtoMessage() {}

func (x *PostTimeConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTimeConfigReq.ProtoReflect.Descriptor instead.
func (*PostTimeConfigReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{64}
}

func (x *PostTimeConfigReq) GetTimeConfigs() []*TimeConfig {
	if x != nil {
		return x.TimeConfigs
	}
	return nil
}

type PostTimeConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeConfigs []*TimeConfig `protobuf:"bytes,1,rep,name=timeConfigs,proto3" json:"timeConfigs,omitempty"`
}

func (x *PostTimeConfigResp) Reset() {
	*x = PostTimeConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTimeConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTimeConfigResp) ProtoMessage() {}

func (x *PostTimeConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTimeConfigResp.ProtoReflect.Descriptor instead.
func (*PostTimeConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{65}
}

func (x *PostTimeConfigResp) GetTimeConfigs() []*TimeConfig {
	if x != nil {
		return x.TimeConfigs
	}
	return nil
}

type ExportTimesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ExportTimesReq) Reset() {
	*x = ExportTimesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportTimesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTimesReq) ProtoMessage() {}

func (x *ExportTimesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTimesReq.ProtoReflect.Descriptor instead.
func (*ExportTimesReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{66}
}

func (x *ExportTimesReq) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type ExportTimesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *ExportTimesResp) Reset() {
	*x = ExportTimesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportTimesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTimesResp) ProtoMessage() {}

func (x *ExportTimesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTimesResp.ProtoReflect.Descriptor instead.
func (*ExportTimesResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{67}
}

func (x *ExportTimesResp) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type TimeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TimeItem) Reset() {
	*x = TimeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeItem) ProtoMessage() {}

func (x *TimeItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeItem.ProtoReflect.Descriptor instead.
func (*TimeItem) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{68}
}

func (x *TimeItem) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadTimesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []string    `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Data   []*TimeItem `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UploadTimesReq) Reset() {
	*x = UploadTimesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadTimesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTimesReq) ProtoMessage() {}

func (x *UploadTimesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTimesReq.ProtoReflect.Descriptor instead.
func (*UploadTimesReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{69}
}

func (x *UploadTimesReq) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *UploadTimesReq) GetData() []*TimeItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type ClearTimesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group []string `protobuf:"bytes,1,rep,name=group,proto3" json:"group,omitempty"`
}

func (x *ClearTimesReq) Reset() {
	*x = ClearTimesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearTimesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearTimesReq) ProtoMessage() {}

func (x *ClearTimesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearTimesReq.ProtoReflect.Descriptor instead.
func (*ClearTimesReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{70}
}

func (x *ClearTimesReq) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

type TimeStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TimeStatistics) Reset() {
	*x = TimeStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStatistics) ProtoMessage() {}

func (x *TimeStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStatistics.ProtoReflect.Descriptor instead.
func (*TimeStatistics) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{71}
}

func (x *TimeStatistics) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *TimeStatistics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTimesStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times []*TimeStatistics `protobuf:"bytes,1,rep,name=times,proto3" json:"times,omitempty"`
}

func (x *GetTimesStatisticsResp) Reset() {
	*x = GetTimesStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimesStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimesStatisticsResp) ProtoMessage() {}

func (x *GetTimesStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimesStatisticsResp.ProtoReflect.Descriptor instead.
func (*GetTimesStatisticsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{72}
}

func (x *GetTimesStatisticsResp) GetTimes() []*TimeStatistics {
	if x != nil {
		return x.Times
	}
	return nil
}

type GetApplicantQuestionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*QuestionAndAnswer `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetApplicantQuestionsResp) Reset() {
	*x = GetApplicantQuestionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantQuestionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantQuestionsResp) ProtoMessage() {}

func (x *GetApplicantQuestionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantQuestionsResp.ProtoReflect.Descriptor instead.
func (*GetApplicantQuestionsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{73}
}

func (x *GetApplicantQuestionsResp) GetQuestions() []*QuestionAndAnswer {
	if x != nil {
		return x.Questions
	}
	return nil
}

type GetRemarkListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64 `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
}

func (x *GetRemarkListReq) Reset() {
	*x = GetRemarkListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemarkListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemarkListReq) ProtoMessage() {}

func (x *GetRemarkListReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemarkListReq.ProtoReflect.Descriptor instead.
func (*GetRemarkListReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{74}
}

func (x *GetRemarkListReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

type Remark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64          `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64          `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Remark      string         `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Admin       *AbstractAdmin `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	UpdatedAt   string         `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Remark) Reset() {
	*x = Remark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Remark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Remark) ProtoMessage() {}

func (x *Remark) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Remark.ProtoReflect.Descriptor instead.
func (*Remark) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{75}
}

func (x *Remark) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *Remark) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *Remark) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Remark) GetAdmin() *AbstractAdmin {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *Remark) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetRemarkListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remarks []*Remark `protobuf:"bytes,1,rep,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *GetRemarkListResp) Reset() {
	*x = GetRemarkListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemarkListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemarkListResp) ProtoMessage() {}

func (x *GetRemarkListResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemarkListResp.ProtoReflect.Descriptor instead.
func (*GetRemarkListResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{76}
}

func (x *GetRemarkListResp) GetRemarks() []*Remark {
	if x != nil {
		return x.Remarks
	}
	return nil
}

type SetApplicantTimeExtendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64  `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	AdminId     int64  `protobuf:"varint,2,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Group       string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Extend      string `protobuf:"bytes,4,opt,name=extend,proto3" json:"extend,omitempty"`
}

func (x *SetApplicantTimeExtendReq) Reset() {
	*x = SetApplicantTimeExtendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetApplicantTimeExtendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetApplicantTimeExtendReq) ProtoMessage() {}

func (x *SetApplicantTimeExtendReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetApplicantTimeExtendReq.ProtoReflect.Descriptor instead.
func (*SetApplicantTimeExtendReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{77}
}

func (x *SetApplicantTimeExtendReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *SetApplicantTimeExtendReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *SetApplicantTimeExtendReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *SetApplicantTimeExtendReq) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

type GetSmsConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types  []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	Alerts []string `protobuf:"bytes,2,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *GetSmsConfigResp) Reset() {
	*x = GetSmsConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmsConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmsConfigResp) ProtoMessage() {}

func (x *GetSmsConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmsConfigResp.ProtoReflect.Descriptor instead.
func (*GetSmsConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{78}
}

func (x *GetSmsConfigResp) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *GetSmsConfigResp) GetAlerts() []string {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type GetApplicantSmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Typ      string `protobuf:"bytes,1,opt,name=typ,proto3" json:"typ,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetApplicantSmsReq) Reset() {
	*x = GetApplicantSmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantSmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantSmsReq) ProtoMessage() {}

func (x *GetApplicantSmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantSmsReq.ProtoReflect.Descriptor instead.
func (*GetApplicantSmsReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{79}
}

func (x *GetApplicantSmsReq) GetTyp() string {
	if x != nil {
		return x.Typ
	}
	return ""
}

func (x *GetApplicantSmsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetApplicantSmsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ApplicantSms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId int64    `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone       string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Status      int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Time        string   `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Args        []string `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty"`
	Content     string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	ReplyCnt    int32    `protobuf:"varint,8,opt,name=replyCnt,proto3" json:"replyCnt,omitempty"`
}

func (x *ApplicantSms) Reset() {
	*x = ApplicantSms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicantSms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicantSms) ProtoMessage() {}

func (x *ApplicantSms) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicantSms.ProtoReflect.Descriptor instead.
func (*ApplicantSms) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{80}
}

func (x *ApplicantSms) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *ApplicantSms) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicantSms) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ApplicantSms) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ApplicantSms) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ApplicantSms) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ApplicantSms) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ApplicantSms) GetReplyCnt() int32 {
	if x != nil {
		return x.ReplyCnt
	}
	return 0
}

type GetApplicantSmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantSms []*ApplicantSms `protobuf:"bytes,1,rep,name=applicantSms,proto3" json:"applicantSms,omitempty"`
	Total        int32           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetApplicantSmsResp) Reset() {
	*x = GetApplicantSmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApplicantSmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicantSmsResp) ProtoMessage() {}

func (x *GetApplicantSmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicantSmsResp.ProtoReflect.Descriptor instead.
func (*GetApplicantSmsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{81}
}

func (x *GetApplicantSmsResp) GetApplicantSms() []*ApplicantSms {
	if x != nil {
		return x.ApplicantSms
	}
	return nil
}

func (x *GetApplicantSmsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SendSmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId      int64   `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Typ          string  `protobuf:"bytes,2,opt,name=typ,proto3" json:"typ,omitempty"`
	ApplicantIds []int64 `protobuf:"varint,3,rep,packed,name=applicantIds,proto3" json:"applicantIds,omitempty"`
}

func (x *SendSmsReq) Reset() {
	*x = SendSmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSmsReq) ProtoMessage() {}

func (x *SendSmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSmsReq.ProtoReflect.Descriptor instead.
func (*SendSmsReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{82}
}

func (x *SendSmsReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *SendSmsReq) GetTyp() string {
	if x != nil {
		return x.Typ
	}
	return ""
}

func (x *SendSmsReq) GetApplicantIds() []int64 {
	if x != nil {
		return x.ApplicantIds
	}
	return nil
}

type GetOAuthConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	AdminUri     string `protobuf:"bytes,3,opt,name=adminUri,proto3" json:"adminUri,omitempty"`
	WechatUri    string `protobuf:"bytes,4,opt,name=wechatUri,proto3" json:"wechatUri,omitempty"`
	RedirectUri  string `protobuf:"bytes,5,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
}

func (x *GetOAuthConfigResp) Reset() {
	*x = GetOAuthConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuthConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuthConfigResp) ProtoMessage() {}

func (x *GetOAuthConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuthConfigResp.ProtoReflect.Descriptor instead.
func (*GetOAuthConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{83}
}

func (x *GetOAuthConfigResp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetOAuthConfigResp) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *GetOAuthConfigResp) GetAdminUri() string {
	if x != nil {
		return x.AdminUri
	}
	return ""
}

func (x *GetOAuthConfigResp) GetWechatUri() string {
	if x != nil {
		return x.WechatUri
	}
	return ""
}

func (x *GetOAuthConfigResp) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

type HistorySms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderName    string `protobuf:"bytes,1,opt,name=senderName,proto3" json:"senderName,omitempty"`
	SenderPhone   string `protobuf:"bytes,2,opt,name=senderPhone,proto3" json:"senderPhone,omitempty"`
	ReceiverName  string `protobuf:"bytes,3,opt,name=receiverName,proto3" json:"receiverName,omitempty"`
	ReceiverPhone string `protobuf:"bytes,4,opt,name=receiverPhone,proto3" json:"receiverPhone,omitempty"`
	Content       string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Time          string `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	Right         bool   `protobuf:"varint,7,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *HistorySms) Reset() {
	*x = HistorySms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistorySms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistorySms) ProtoMessage() {}

func (x *HistorySms) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistorySms.ProtoReflect.Descriptor instead.
func (*HistorySms) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{84}
}

func (x *HistorySms) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *HistorySms) GetSenderPhone() string {
	if x != nil {
		return x.SenderPhone
	}
	return ""
}

func (x *HistorySms) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *HistorySms) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *HistorySms) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HistorySms) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *HistorySms) GetRight() bool {
	if x != nil {
		return x.Right
	}
	return false
}

type GetHistorySmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistorySms []*HistorySms `protobuf:"bytes,1,rep,name=historySms,proto3" json:"historySms,omitempty"`
}

func (x *GetHistorySmsResp) Reset() {
	*x = GetHistorySmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistorySmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistorySmsResp) ProtoMessage() {}

func (x *GetHistorySmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistorySmsResp.ProtoReflect.Descriptor instead.
func (*GetHistorySmsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{85}
}

func (x *GetHistorySmsResp) GetHistorySms() []*HistorySms {
	if x != nil {
		return x.HistorySms
	}
	return nil
}

type GetFrontendConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	RedirectUri string `protobuf:"bytes,2,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
	AdminUri    string `protobuf:"bytes,3,opt,name=adminUri,proto3" json:"adminUri,omitempty"`
	WechatUri   string `protobuf:"bytes,4,opt,name=wechatUri,proto3" json:"wechatUri,omitempty"`
	BaseUri     string `protobuf:"bytes,5,opt,name=baseUri,proto3" json:"baseUri,omitempty"`
	Debug       bool   `protobuf:"varint,6,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *GetFrontendConfigResp) Reset() {
	*x = GetFrontendConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontendConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontendConfigResp) ProtoMessage() {}

func (x *GetFrontendConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontendConfigResp.ProtoReflect.Descriptor instead.
func (*GetFrontendConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{86}
}

func (x *GetFrontendConfigResp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetFrontendConfigResp) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *GetFrontendConfigResp) GetAdminUri() string {
	if x != nil {
		return x.AdminUri
	}
	return ""
}

func (x *GetFrontendConfigResp) GetWechatUri() string {
	if x != nil {
		return x.WechatUri
	}
	return ""
}

func (x *GetFrontendConfigResp) GetBaseUri() string {
	if x != nil {
		return x.BaseUri
	}
	return ""
}

func (x *GetFrontendConfigResp) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type ReceiveSmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone   string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ReceiveSmsReq) Reset() {
	*x = ReceiveSmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveSmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveSmsReq) ProtoMessage() {}

func (x *ReceiveSmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveSmsReq.ProtoReflect.Descriptor instead.
func (*ReceiveSmsReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{87}
}

func (x *ReceiveSmsReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ReceiveSmsReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReceiveSmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ReceiveSmsResp) Reset() {
	*x = ReceiveSmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveSmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveSmsResp) ProtoMessage() {}

func (x *ReceiveSmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveSmsResp.ProtoReflect.Descriptor instead.
func (*ReceiveSmsResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{88}
}

func (x *ReceiveSmsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetConfigReq) Reset() {
	*x = GetConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReq) ProtoMessage() {}

func (x *GetConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReq.ProtoReflect.Descriptor instead.
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{89}
}

func (x *GetConfigReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetConfigResp) Reset() {
	*x = GetConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResp) ProtoMessage() {}

func (x *GetConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResp.ProtoReflect.Descriptor instead.
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{90}
}

func (x *GetConfigResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetConfigResp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateConfigReq) Reset() {
	*x = UpdateConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigReq) ProtoMessage() {}

func (x *UpdateConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{91}
}

func (x *UpdateConfigReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateConfigReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateConfigResp) Reset() {
	*x = UpdateConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigResp) ProtoMessage() {}

func (x *UpdateConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigResp.ProtoReflect.Descriptor instead.
func (*UpdateConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{92}
}

func (x *UpdateConfigResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateConfigResp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetSmsServiceConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug    bool   `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	Enabled  bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	SendUrl  string `protobuf:"bytes,3,opt,name=sendUrl,proto3" json:"sendUrl,omitempty"`
	UserName string `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *GetSmsServiceConfigResp) Reset() {
	*x = GetSmsServiceConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmsServiceConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmsServiceConfigResp) ProtoMessage() {}

func (x *GetSmsServiceConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmsServiceConfigResp.ProtoReflect.Descriptor instead.
func (*GetSmsServiceConfigResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{93}
}

func (x *GetSmsServiceConfigResp) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *GetSmsServiceConfigResp) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GetSmsServiceConfigResp) GetSendUrl() string {
	if x != nil {
		return x.SendUrl
	}
	return ""
}

func (x *GetSmsServiceConfigResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location           string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Status             int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Admins             []string `protobuf:"bytes,5,rep,name=admins,proto3" json:"admins,omitempty"`
	Applicant          string   `protobuf:"bytes,6,opt,name=applicant,proto3" json:"applicant,omitempty"`
	Group              string   `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	Time               string   `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	UpdatedAt          string   `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ApplicantId        int64    `protobuf:"varint,10,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	UpdatedBy          string   `protobuf:"bytes,11,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	InterviewerComment string   `protobuf:"bytes,12,opt,name=interviewerComment,proto3" json:"interviewerComment,omitempty"`
	ReceiverComment    string   `protobuf:"bytes,13,opt,name=receiverComment,proto3" json:"receiverComment,omitempty"`
	GroupLabel         string   `protobuf:"bytes,14,opt,name=groupLabel,proto3" json:"groupLabel,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{94}
}

func (x *Room) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Room) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Room) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Room) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *Room) GetApplicant() string {
	if x != nil {
		return x.Applicant
	}
	return ""
}

func (x *Room) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Room) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Room) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Room) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *Room) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Room) GetInterviewerComment() string {
	if x != nil {
		return x.InterviewerComment
	}
	return ""
}

func (x *Room) GetReceiverComment() string {
	if x != nil {
		return x.ReceiverComment
	}
	return ""
}

func (x *Room) GetGroupLabel() string {
	if x != nil {
		return x.GroupLabel
	}
	return ""
}

type GetAllRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms      []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	MyRoomName string  `protobuf:"bytes,2,opt,name=myRoomName,proto3" json:"myRoomName,omitempty"`
	MyRoomId   int64   `protobuf:"varint,3,opt,name=myRoomId,proto3" json:"myRoomId,omitempty"`
}

func (x *GetAllRoomResp) Reset() {
	*x = GetAllRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRoomResp) ProtoMessage() {}

func (x *GetAllRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRoomResp.ProtoReflect.Descriptor instead.
func (*GetAllRoomResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{95}
}

func (x *GetAllRoomResp) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetAllRoomResp) GetMyRoomName() string {
	if x != nil {
		return x.MyRoomName
	}
	return ""
}

func (x *GetAllRoomResp) GetMyRoomId() int64 {
	if x != nil {
		return x.MyRoomId
	}
	return 0
}

type SetMyRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId int64 `protobuf:"varint,1,opt,name=adminId,proto3" json:"adminId,omitempty"`
	RoomId  int64 `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *SetMyRoomReq) Reset() {
	*x = SetMyRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyRoomReq) ProtoMessage() {}

func (x *SetMyRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyRoomReq.ProtoReflect.Descriptor instead.
func (*SetMyRoomReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{96}
}

func (x *SetMyRoomReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *SetMyRoomReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type PushableApplicant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group           string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Time            string `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	ApplicantId     int64  `protobuf:"varint,5,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	ApplicantTimeId int64  `protobuf:"varint,6,opt,name=applicantTimeId,proto3" json:"applicantTimeId,omitempty"`
}

func (x *PushableApplicant) Reset() {
	*x = PushableApplicant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushableApplicant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushableApplicant) ProtoMessage() {}

func (x *PushableApplicant) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushableApplicant.ProtoReflect.Descriptor instead.
func (*PushableApplicant) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{97}
}

func (x *PushableApplicant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PushableApplicant) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *PushableApplicant) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *PushableApplicant) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *PushableApplicant) GetApplicantTimeId() int64 {
	if x != nil {
		return x.ApplicantTimeId
	}
	return 0
}

type GetPushableListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applicants []*PushableApplicant `protobuf:"bytes,1,rep,name=applicants,proto3" json:"applicants,omitempty"`
}

func (x *GetPushableListResp) Reset() {
	*x = GetPushableListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushableListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushableListResp) ProtoMessage() {}

func (x *GetPushableListResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushableListResp.ProtoReflect.Descriptor instead.
func (*GetPushableListResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{98}
}

func (x *GetPushableListResp) GetApplicants() []*PushableApplicant {
	if x != nil {
		return x.Applicants
	}
	return nil
}

type PushApplicantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantId     int64 `protobuf:"varint,1,opt,name=applicantId,proto3" json:"applicantId,omitempty"`
	ApplicantTimeId int64 `protobuf:"varint,2,opt,name=applicantTimeId,proto3" json:"applicantTimeId,omitempty"`
	RoomId          int64 `protobuf:"varint,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	AdminId         int64 `protobuf:"varint,4,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *PushApplicantReq) Reset() {
	*x = PushApplicantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushApplicantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushApplicantReq) ProtoMessage() {}

func (x *PushApplicantReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushApplicantReq.ProtoReflect.Descriptor instead.
func (*PushApplicantReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{99}
}

func (x *PushApplicantReq) GetApplicantId() int64 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

func (x *PushApplicantReq) GetApplicantTimeId() int64 {
	if x != nil {
		return x.ApplicantTimeId
	}
	return 0
}

func (x *PushApplicantReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *PushApplicantReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type SetRoomStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId  int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Status  int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	AdminId int64 `protobuf:"varint,3,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *SetRoomStatusReq) Reset() {
	*x = SetRoomStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoomStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomStatusReq) ProtoMessage() {}

func (x *SetRoomStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomStatusReq.ProtoReflect.Descriptor instead.
func (*SetRoomStatusReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{100}
}

func (x *SetRoomStatusReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SetRoomStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SetRoomStatusReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type SetRoomGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId  int64  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Group   string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	AdminId int64  `protobuf:"varint,3,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *SetRoomGroupReq) Reset() {
	*x = SetRoomGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoomGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomGroupReq) ProtoMessage() {}

func (x *SetRoomGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomGroupReq.ProtoReflect.Descriptor instead.
func (*SetRoomGroupReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{101}
}

func (x *SetRoomGroupReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SetRoomGroupReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *SetRoomGroupReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type SetRoomCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId  int64  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	AdminId int64  `protobuf:"varint,3,opt,name=adminId,proto3" json:"adminId,omitempty"`
	Type    int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SetRoomCommentReq) Reset() {
	*x = SetRoomCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoomCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomCommentReq) ProtoMessage() {}

func (x *SetRoomCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomCommentReq.ProtoReflect.Descriptor instead.
func (*SetRoomCommentReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{102}
}

func (x *SetRoomCommentReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SetRoomCommentReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SetRoomCommentReq) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *SetRoomCommentReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GetScheduleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group           string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Date            string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Type            string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ShowNotSelected bool   `protobuf:"varint,4,opt,name=showNotSelected,proto3" json:"showNotSelected,omitempty"`
}

func (x *GetScheduleReq) Reset() {
	*x = GetScheduleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleReq) ProtoMessage() {}

func (x *GetScheduleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleReq.ProtoReflect.Descriptor instead.
func (*GetScheduleReq) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{103}
}

func (x *GetScheduleReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetScheduleReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetScheduleReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetScheduleReq) GetShowNotSelected() bool {
	if x != nil {
		return x.ShowNotSelected
	}
	return false
}

type TimeTableItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Start    string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End      string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Color    string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Category string `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Id       int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TimeTableItem) Reset() {
	*x = TimeTableItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeTableItem) ProtoMessage() {}

func (x *TimeTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeTableItem.ProtoReflect.Descriptor instead.
func (*TimeTableItem) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{104}
}

func (x *TimeTableItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TimeTableItem) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *TimeTableItem) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *TimeTableItem) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TimeTableItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TimeTableItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetScheduleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeTable  []*TimeTableItem `protobuf:"bytes,1,rep,name=timeTable,proto3" json:"timeTable,omitempty"`
	Categories []string         `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	Focus      string           `protobuf:"bytes,3,opt,name=focus,proto3" json:"focus,omitempty"`
}

func (x *GetScheduleResp) Reset() {
	*x = GetScheduleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleResp) ProtoMessage() {}

func (x *GetScheduleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleResp.ProtoReflect.Descriptor instead.
func (*GetScheduleResp) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{105}
}

func (x *GetScheduleResp) GetTimeTable() []*TimeTableItem {
	if x != nil {
		return x.TimeTable
	}
	return nil
}

func (x *GetScheduleResp) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GetScheduleResp) GetFocus() string {
	if x != nil {
		return x.Focus
	}
	return ""
}

var File_admin_proto protoreflect.FileDescriptor

var file_admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x68,
	0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x21, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69,
	0x6e, 0x67, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x26, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x32,
	0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x1c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x22, 0x7e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x22, 0xb2, 0x02, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x0d, 0x41,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xae,
	0x01, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xf4, 0x02, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x32, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x72, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x64, 0x6d,
	0x69, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x74, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xb2,
	0x02, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76,
	0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x76,
	0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x61, 0x64, 0x6d,
	0x69, 0x74, 0x73, 0x22, 0xaa, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x50,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xf2, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68,
	0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x22, 0x49, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22,
	0x36, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x78, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x0a, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x36, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x51, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x08, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x36, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x23, 0x0a,
	0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22, 0xf1, 0x01, 0x0a, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x6d, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x6d, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x3f,
	0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2d, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22,
	0x41, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x22, 0x51, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x37, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0d, 0x50,
	0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x63, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x64, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x4d, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3c,
	0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x41, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x54, 0x0a,
	0x12, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x25, 0x0a,
	0x0f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0x7d, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2e, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a,
	0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x3c, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x41, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x47,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x22,
	0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x53, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5c, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x72, 0x69, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x72, 0x69, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x22, 0xdc,
	0x01, 0x0a, 0x0a, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6d, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x51, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x6d, 0x73, 0x52, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6d, 0x73,
	0x22, 0xbf, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55,
	0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x22, 0x3f, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x37, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x3a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x6d, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x03, 0x0a,
	0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x79, 0x52, 0x6f, 0x6f,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x40, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x73, 0x22,
	0x90, 0x01, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x5c, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x59, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x78, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x4e,
	0x6f, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6f,
	0x63, 0x75, 0x73, 0x32, 0xb1, 0x25, 0x0a, 0x09, 0x48, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x2e,
	0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x51, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x63, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x2b, 0x2e, 0x68,
	0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x68,
	0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x57, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68,
	0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x68, 0x72, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e,
	0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x68, 0x72, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0b, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e,
	0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x70,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4e, 0x65, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x68, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x52, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x12, 0x24, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73,
	0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6d, 0x73, 0x12, 0x20, 0x2e,
	0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53,
	0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x6d, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4d,
	0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1e, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0d, 0x50,
	0x75, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x68,
	0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x2e, 0x68, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x68, 0x72, 0x2d,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData = file_admin_proto_rawDesc
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_proto_rawDescData)
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 107)
var file_admin_proto_goTypes = []interface{}{
	(*PingRequest)(nil),               // 0: hr_admin_service.PingRequest
	(*PingResponse)(nil),              // 1: hr_admin_service.PingResponse
	(*AdminIdReq)(nil),                // 2: hr_admin_service.AdminIdReq
	(*ApplicantIdReq)(nil),            // 3: hr_admin_service.ApplicantIdReq
	(*StatusResp)(nil),                // 4: hr_admin_service.StatusResp
	(*SetApplicantAdmitReq)(nil),      // 5: hr_admin_service.SetApplicantAdmitReq
	(*GetApplicantsReq)(nil),          // 6: hr_admin_service.GetApplicantsReq
	(*Intent)(nil),                    // 7: hr_admin_service.Intent
	(*Time)(nil),                      // 8: hr_admin_service.Time
	(*AbstractAdmin)(nil),             // 9: hr_admin_service.AbstractAdmin
	(*Admit)(nil),                     // 10: hr_admin_service.Admit
	(*Applicant)(nil),                 // 11: hr_admin_service.Applicant
	(*Link)(nil),                      // 12: hr_admin_service.Link
	(*ApplicantListItem)(nil),         // 13: hr_admin_service.ApplicantListItem
	(*GetApplicantsResp)(nil),         // 14: hr_admin_service.GetApplicantsResp
	(*GetApplicantInfoResp)(nil),      // 15: hr_admin_service.GetApplicantInfoResp
	(*NameListItem)(nil),              // 16: hr_admin_service.NameListItem
	(*GetApplicantNameListResp)(nil),  // 17: hr_admin_service.GetApplicantNameListResp
	(*Score)(nil),                     // 18: hr_admin_service.Score
	(*GetApplicantScoresResp)(nil),    // 19: hr_admin_service.GetApplicantScoresResp
	(*DeleteApplicantReq)(nil),        // 20: hr_admin_service.DeleteApplicantReq
	(*Standard)(nil),                  // 21: hr_admin_service.Standard
	(*AddEvaluationReq)(nil),          // 22: hr_admin_service.AddEvaluationReq
	(*Evaluation)(nil),                // 23: hr_admin_service.Evaluation
	(*AddEvaluationResp)(nil),         // 24: hr_admin_service.AddEvaluationResp
	(*DeleteEvaluationReq)(nil),       // 25: hr_admin_service.DeleteEvaluationReq
	(*UpdateEvaluationReq)(nil),       // 26: hr_admin_service.UpdateEvaluationReq
	(*UpdateEvaluationResp)(nil),      // 27: hr_admin_service.UpdateEvaluationResp
	(*GetEvaluationInfoReq)(nil),      // 28: hr_admin_service.GetEvaluationInfoReq
	(*GetEvaluationInfoResp)(nil),     // 29: hr_admin_service.GetEvaluationInfoResp
	(*GetEvaluationsResp)(nil),        // 30: hr_admin_service.GetEvaluationsResp
	(*CreateQuestionReq)(nil),         // 31: hr_admin_service.CreateQuestionReq
	(*Question)(nil),                  // 32: hr_admin_service.Question
	(*QuestionAndAnswer)(nil),         // 33: hr_admin_service.QuestionAndAnswer
	(*CreateQuestionResp)(nil),        // 34: hr_admin_service.CreateQuestionResp
	(*DeleteQuestionReq)(nil),         // 35: hr_admin_service.DeleteQuestionReq
	(*UpdateQuestionReq)(nil),         // 36: hr_admin_service.UpdateQuestionReq
	(*UpdateQuestionResp)(nil),        // 37: hr_admin_service.UpdateQuestionResp
	(*GetQuestionsReq)(nil),           // 38: hr_admin_service.GetQuestionsReq
	(*GetQuestionsResp)(nil),          // 39: hr_admin_service.GetQuestionsResp
	(*AdminLoginReq)(nil),             // 40: hr_admin_service.AdminLoginReq
	(*AdminGroup)(nil),                // 41: hr_admin_service.AdminGroup
	(*Admin)(nil),                     // 42: hr_admin_service.Admin
	(*AdminLoginResp)(nil),            // 43: hr_admin_service.AdminLoginResp
	(*GetAdminInfoResp)(nil),          // 44: hr_admin_service.GetAdminInfoResp
	(*SetDefaultStandardReq)(nil),     // 45: hr_admin_service.SetDefaultStandardReq
	(*GetRankReq)(nil),                // 46: hr_admin_service.GetRankReq
	(*GetRankResp)(nil),               // 47: hr_admin_service.GetRankResp
	(*GetScoreReq)(nil),               // 48: hr_admin_service.GetScoreReq
	(*GetScoreResp)(nil),              // 49: hr_admin_service.GetScoreResp
	(*PostScoreReq)(nil),              // 50: hr_admin_service.PostScoreReq
	(*PostScoreResp)(nil),             // 51: hr_admin_service.PostScoreResp
	(*DeleteScoreReq)(nil),            // 52: hr_admin_service.DeleteScoreReq
	(*GetRemarkReq)(nil),              // 53: hr_admin_service.GetRemarkReq
	(*GetRemarkResp)(nil),             // 54: hr_admin_service.GetRemarkResp
	(*PostRemarkReq)(nil),             // 55: hr_admin_service.PostRemarkReq
	(*PostRemarkResp)(nil),            // 56: hr_admin_service.PostRemarkResp
	(*DeleteRemarkReq)(nil),           // 57: hr_admin_service.DeleteRemarkReq
	(*GetStatisticsClassifyReq)(nil),  // 58: hr_admin_service.GetStatisticsClassifyReq
	(*StatisticsClassify)(nil),        // 59: hr_admin_service.StatisticsClassify
	(*GetStatisticsClassifyResp)(nil), // 60: hr_admin_service.GetStatisticsClassifyResp
	(*StatisticsDaily)(nil),           // 61: hr_admin_service.StatisticsDaily
	(*GetStatisticsDailyNewResp)(nil), // 62: hr_admin_service.GetStatisticsDailyNewResp
	(*TimeConfig)(nil),                // 63: hr_admin_service.TimeConfig
	(*PostTimeConfigReq)(nil),         // 64: hr_admin_service.PostTimeConfigReq
	(*PostTimeConfigResp)(nil),        // 65: hr_admin_service.PostTimeConfigResp
	(*ExportTimesReq)(nil),            // 66: hr_admin_service.ExportTimesReq
	(*ExportTimesResp)(nil),           // 67: hr_admin_service.ExportTimesResp
	(*TimeItem)(nil),                  // 68: hr_admin_service.TimeItem
	(*UploadTimesReq)(nil),            // 69: hr_admin_service.UploadTimesReq
	(*ClearTimesReq)(nil),             // 70: hr_admin_service.ClearTimesReq
	(*TimeStatistics)(nil),            // 71: hr_admin_service.TimeStatistics
	(*GetTimesStatisticsResp)(nil),    // 72: hr_admin_service.GetTimesStatisticsResp
	(*GetApplicantQuestionsResp)(nil), // 73: hr_admin_service.GetApplicantQuestionsResp
	(*GetRemarkListReq)(nil),          // 74: hr_admin_service.GetRemarkListReq
	(*Remark)(nil),                    // 75: hr_admin_service.Remark
	(*GetRemarkListResp)(nil),         // 76: hr_admin_service.GetRemarkListResp
	(*SetApplicantTimeExtendReq)(nil), // 77: hr_admin_service.SetApplicantTimeExtendReq
	(*GetSmsConfigResp)(nil),          // 78: hr_admin_service.GetSmsConfigResp
	(*GetApplicantSmsReq)(nil),        // 79: hr_admin_service.GetApplicantSmsReq
	(*ApplicantSms)(nil),              // 80: hr_admin_service.ApplicantSms
	(*GetApplicantSmsResp)(nil),       // 81: hr_admin_service.GetApplicantSmsResp
	(*SendSmsReq)(nil),                // 82: hr_admin_service.SendSmsReq
	(*GetOAuthConfigResp)(nil),        // 83: hr_admin_service.GetOAuthConfigResp
	(*HistorySms)(nil),                // 84: hr_admin_service.HistorySms
	(*GetHistorySmsResp)(nil),         // 85: hr_admin_service.GetHistorySmsResp
	(*GetFrontendConfigResp)(nil),     // 86: hr_admin_service.GetFrontendConfigResp
	(*ReceiveSmsReq)(nil),             // 87: hr_admin_service.ReceiveSmsReq
	(*ReceiveSmsResp)(nil),            // 88: hr_admin_service.ReceiveSmsResp
	(*GetConfigReq)(nil),              // 89: hr_admin_service.GetConfigReq
	(*GetConfigResp)(nil),             // 90: hr_admin_service.GetConfigResp
	(*UpdateConfigReq)(nil),           // 91: hr_admin_service.UpdateConfigReq
	(*UpdateConfigResp)(nil),          // 92: hr_admin_service.UpdateConfigResp
	(*GetSmsServiceConfigResp)(nil),   // 93: hr_admin_service.GetSmsServiceConfigResp
	(*Room)(nil),                      // 94: hr_admin_service.Room
	(*GetAllRoomResp)(nil),            // 95: hr_admin_service.GetAllRoomResp
	(*SetMyRoomReq)(nil),              // 96: hr_admin_service.SetMyRoomReq
	(*PushableApplicant)(nil),         // 97: hr_admin_service.PushableApplicant
	(*GetPushableListResp)(nil),       // 98: hr_admin_service.GetPushableListResp
	(*PushApplicantReq)(nil),          // 99: hr_admin_service.PushApplicantReq
	(*SetRoomStatusReq)(nil),          // 100: hr_admin_service.SetRoomStatusReq
	(*SetRoomGroupReq)(nil),           // 101: hr_admin_service.SetRoomGroupReq
	(*SetRoomCommentReq)(nil),         // 102: hr_admin_service.SetRoomCommentReq
	(*GetScheduleReq)(nil),            // 103: hr_admin_service.GetScheduleReq
	(*TimeTableItem)(nil),             // 104: hr_admin_service.TimeTableItem
	(*GetScheduleResp)(nil),           // 105: hr_admin_service.GetScheduleResp
	nil,                               // 106: hr_admin_service.TimeItem.DataEntry
}
var file_admin_proto_depIdxs = []int32{
	9,   // 0: hr_admin_service.Admit.admin:type_name -> hr_admin_service.AbstractAdmin
	7,   // 1: hr_admin_service.Applicant.intents:type_name -> hr_admin_service.Intent
	8,   // 2: hr_admin_service.Applicant.times:type_name -> hr_admin_service.Time
	10,  // 3: hr_admin_service.Applicant.admits:type_name -> hr_admin_service.Admit
	10,  // 4: hr_admin_service.ApplicantListItem.admits:type_name -> hr_admin_service.Admit
	13,  // 5: hr_admin_service.GetApplicantsResp.data:type_name -> hr_admin_service.ApplicantListItem
	12,  // 6: hr_admin_service.GetApplicantsResp.links:type_name -> hr_admin_service.Link
	11,  // 7: hr_admin_service.GetApplicantInfoResp.applicant:type_name -> hr_admin_service.Applicant
	16,  // 8: hr_admin_service.GetApplicantNameListResp.nameList:type_name -> hr_admin_service.NameListItem
	9,   // 9: hr_admin_service.Score.admin:type_name -> hr_admin_service.AbstractAdmin
	18,  // 10: hr_admin_service.GetApplicantScoresResp.scores:type_name -> hr_admin_service.Score
	21,  // 11: hr_admin_service.AddEvaluationReq.standard:type_name -> hr_admin_service.Standard
	9,   // 12: hr_admin_service.Evaluation.updatedBy:type_name -> hr_admin_service.AbstractAdmin
	21,  // 13: hr_admin_service.Evaluation.standard:type_name -> hr_admin_service.Standard
	23,  // 14: hr_admin_service.AddEvaluationResp.evaluation:type_name -> hr_admin_service.Evaluation
	21,  // 15: hr_admin_service.UpdateEvaluationReq.standard:type_name -> hr_admin_service.Standard
	23,  // 16: hr_admin_service.UpdateEvaluationResp.evaluation:type_name -> hr_admin_service.Evaluation
	23,  // 17: hr_admin_service.GetEvaluationInfoResp.evaluation:type_name -> hr_admin_service.Evaluation
	23,  // 18: hr_admin_service.GetEvaluationsResp.evaluations:type_name -> hr_admin_service.Evaluation
	32,  // 19: hr_admin_service.CreateQuestionResp.question:type_name -> hr_admin_service.Question
	32,  // 20: hr_admin_service.UpdateQuestionReq.question:type_name -> hr_admin_service.Question
	32,  // 21: hr_admin_service.UpdateQuestionResp.question:type_name -> hr_admin_service.Question
	32,  // 22: hr_admin_service.GetQuestionsResp.questions:type_name -> hr_admin_service.Question
	41,  // 23: hr_admin_service.Admin.groups:type_name -> hr_admin_service.AdminGroup
	42,  // 24: hr_admin_service.AdminLoginResp.admin:type_name -> hr_admin_service.Admin
	42,  // 25: hr_admin_service.GetAdminInfoResp.admin:type_name -> hr_admin_service.Admin
	18,  // 26: hr_admin_service.GetScoreResp.score:type_name -> hr_admin_service.Score
	18,  // 27: hr_admin_service.PostScoreResp.score:type_name -> hr_admin_service.Score
	59,  // 28: hr_admin_service.GetStatisticsClassifyResp.class:type_name -> hr_admin_service.StatisticsClassify
	61,  // 29: hr_admin_service.GetStatisticsDailyNewResp.applicants:type_name -> hr_admin_service.StatisticsDaily
	63,  // 30: hr_admin_service.PostTimeConfigReq.timeConfigs:type_name -> hr_admin_service.TimeConfig
	63,  // 31: hr_admin_service.PostTimeConfigResp.timeConfigs:type_name -> hr_admin_service.TimeConfig
	106, // 32: hr_admin_service.TimeItem.data:type_name -> hr_admin_service.TimeItem.DataEntry
	68,  // 33: hr_admin_service.UploadTimesReq.Data:type_name -> hr_admin_service.TimeItem
	71,  // 34: hr_admin_service.GetTimesStatisticsResp.times:type_name -> hr_admin_service.TimeStatistics
	33,  // 35: hr_admin_service.GetApplicantQuestionsResp.questions:type_name -> hr_admin_service.QuestionAndAnswer
	9,   // 36: hr_admin_service.Remark.admin:type_name -> hr_admin_service.AbstractAdmin
	75,  // 37: hr_admin_service.GetRemarkListResp.remarks:type_name -> hr_admin_service.Remark
	80,  // 38: hr_admin_service.GetApplicantSmsResp.applicantSms:type_name -> hr_admin_service.ApplicantSms
	84,  // 39: hr_admin_service.GetHistorySmsResp.historySms:type_name -> hr_admin_service.HistorySms
	94,  // 40: hr_admin_service.GetAllRoomResp.rooms:type_name -> hr_admin_service.Room
	97,  // 41: hr_admin_service.GetPushableListResp.applicants:type_name -> hr_admin_service.PushableApplicant
	104, // 42: hr_admin_service.GetScheduleResp.timeTable:type_name -> hr_admin_service.TimeTableItem
	0,   // 43: hr_admin_service.HrService.Ping:input_type -> hr_admin_service.PingRequest
	5,   // 44: hr_admin_service.HrService.SetApplicantAdmit:input_type -> hr_admin_service.SetApplicantAdmitReq
	6,   // 45: hr_admin_service.HrService.GetApplicants:input_type -> hr_admin_service.GetApplicantsReq
	3,   // 46: hr_admin_service.HrService.GetApplicantInfo:input_type -> hr_admin_service.ApplicantIdReq
	2,   // 47: hr_admin_service.HrService.GetApplicantNameList:input_type -> hr_admin_service.AdminIdReq
	3,   // 48: hr_admin_service.HrService.GetApplicantScores:input_type -> hr_admin_service.ApplicantIdReq
	3,   // 49: hr_admin_service.HrService.DeleteApplicant:input_type -> hr_admin_service.ApplicantIdReq
	77,  // 50: hr_admin_service.HrService.SetApplicantTimeExtend:input_type -> hr_admin_service.SetApplicantTimeExtendReq
	22,  // 51: hr_admin_service.HrService.AddEvaluation:input_type -> hr_admin_service.AddEvaluationReq
	25,  // 52: hr_admin_service.HrService.DeleteEvaluation:input_type -> hr_admin_service.DeleteEvaluationReq
	26,  // 53: hr_admin_service.HrService.UpdateEvaluation:input_type -> hr_admin_service.UpdateEvaluationReq
	28,  // 54: hr_admin_service.HrService.GetEvaluationInfo:input_type -> hr_admin_service.GetEvaluationInfoReq
	2,   // 55: hr_admin_service.HrService.GetEvaluations:input_type -> hr_admin_service.AdminIdReq
	31,  // 56: hr_admin_service.HrService.CreateQuestion:input_type -> hr_admin_service.CreateQuestionReq
	35,  // 57: hr_admin_service.HrService.DeleteQuestion:input_type -> hr_admin_service.DeleteQuestionReq
	36,  // 58: hr_admin_service.HrService.UpdateQuestion:input_type -> hr_admin_service.UpdateQuestionReq
	38,  // 59: hr_admin_service.HrService.GetQuestions:input_type -> hr_admin_service.GetQuestionsReq
	3,   // 60: hr_admin_service.HrService.GetApplicantQuestions:input_type -> hr_admin_service.ApplicantIdReq
	40,  // 61: hr_admin_service.HrService.AdminLogin:input_type -> hr_admin_service.AdminLoginReq
	2,   // 62: hr_admin_service.HrService.AdminLogout:input_type -> hr_admin_service.AdminIdReq
	2,   // 63: hr_admin_service.HrService.GetAdminInfo:input_type -> hr_admin_service.AdminIdReq
	45,  // 64: hr_admin_service.HrService.SetDefaultStandard:input_type -> hr_admin_service.SetDefaultStandardReq
	2,   // 65: hr_admin_service.HrService.GetOAuthConfig:input_type -> hr_admin_service.AdminIdReq
	2,   // 66: hr_admin_service.HrService.GetFrontendConfig:input_type -> hr_admin_service.AdminIdReq
	46,  // 67: hr_admin_service.HrService.GetRank:input_type -> hr_admin_service.GetRankReq
	48,  // 68: hr_admin_service.HrService.GetScore:input_type -> hr_admin_service.GetScoreReq
	50,  // 69: hr_admin_service.HrService.PostScore:input_type -> hr_admin_service.PostScoreReq
	52,  // 70: hr_admin_service.HrService.DeleteScore:input_type -> hr_admin_service.DeleteScoreReq
	53,  // 71: hr_admin_service.HrService.GetRemark:input_type -> hr_admin_service.GetRemarkReq
	55,  // 72: hr_admin_service.HrService.PostRemark:input_type -> hr_admin_service.PostRemarkReq
	57,  // 73: hr_admin_service.HrService.DeleteRemark:input_type -> hr_admin_service.DeleteRemarkReq
	74,  // 74: hr_admin_service.HrService.GetRemarkList:input_type -> hr_admin_service.GetRemarkListReq
	58,  // 75: hr_admin_service.HrService.GetStatisticsClassify:input_type -> hr_admin_service.GetStatisticsClassifyReq
	2,   // 76: hr_admin_service.HrService.GetStatisticsDailyNew:input_type -> hr_admin_service.AdminIdReq
	64,  // 77: hr_admin_service.HrService.PostTimeConfig:input_type -> hr_admin_service.PostTimeConfigReq
	66,  // 78: hr_admin_service.HrService.ExportTimes:input_type -> hr_admin_service.ExportTimesReq
	69,  // 79: hr_admin_service.HrService.UploadTimes:input_type -> hr_admin_service.UploadTimesReq
	70,  // 80: hr_admin_service.HrService.ClearTimes:input_type -> hr_admin_service.ClearTimesReq
	2,   // 81: hr_admin_service.HrService.GetTimesStatistics:input_type -> hr_admin_service.AdminIdReq
	103, // 82: hr_admin_service.HrService.GetSchedule:input_type -> hr_admin_service.GetScheduleReq
	2,   // 83: hr_admin_service.HrService.GetSmsConfig:input_type -> hr_admin_service.AdminIdReq
	79,  // 84: hr_admin_service.HrService.GetApplicantSms:input_type -> hr_admin_service.GetApplicantSmsReq
	82,  // 85: hr_admin_service.HrService.SendSms:input_type -> hr_admin_service.SendSmsReq
	3,   // 86: hr_admin_service.HrService.GetHistorySms:input_type -> hr_admin_service.ApplicantIdReq
	87,  // 87: hr_admin_service.HrService.ReceiveSms:input_type -> hr_admin_service.ReceiveSmsReq
	89,  // 88: hr_admin_service.HrService.GetConfig:input_type -> hr_admin_service.GetConfigReq
	91,  // 89: hr_admin_service.HrService.UpdateConfig:input_type -> hr_admin_service.UpdateConfigReq
	2,   // 90: hr_admin_service.HrService.GetSmsServiceConfig:input_type -> hr_admin_service.AdminIdReq
	2,   // 91: hr_admin_service.HrService.GetAllRoom:input_type -> hr_admin_service.AdminIdReq
	96,  // 92: hr_admin_service.HrService.SetMyRoom:input_type -> hr_admin_service.SetMyRoomReq
	2,   // 93: hr_admin_service.HrService.GetPushableList:input_type -> hr_admin_service.AdminIdReq
	99,  // 94: hr_admin_service.HrService.PushApplicant:input_type -> hr_admin_service.PushApplicantReq
	100, // 95: hr_admin_service.HrService.SetRoomStatus:input_type -> hr_admin_service.SetRoomStatusReq
	102, // 96: hr_admin_service.HrService.SetRoomComment:input_type -> hr_admin_service.SetRoomCommentReq
	101, // 97: hr_admin_service.HrService.SetRoomGroup:input_type -> hr_admin_service.SetRoomGroupReq
	1,   // 98: hr_admin_service.HrService.Ping:output_type -> hr_admin_service.PingResponse
	4,   // 99: hr_admin_service.HrService.SetApplicantAdmit:output_type -> hr_admin_service.StatusResp
	14,  // 100: hr_admin_service.HrService.GetApplicants:output_type -> hr_admin_service.GetApplicantsResp
	15,  // 101: hr_admin_service.HrService.GetApplicantInfo:output_type -> hr_admin_service.GetApplicantInfoResp
	17,  // 102: hr_admin_service.HrService.GetApplicantNameList:output_type -> hr_admin_service.GetApplicantNameListResp
	19,  // 103: hr_admin_service.HrService.GetApplicantScores:output_type -> hr_admin_service.GetApplicantScoresResp
	4,   // 104: hr_admin_service.HrService.DeleteApplicant:output_type -> hr_admin_service.StatusResp
	4,   // 105: hr_admin_service.HrService.SetApplicantTimeExtend:output_type -> hr_admin_service.StatusResp
	24,  // 106: hr_admin_service.HrService.AddEvaluation:output_type -> hr_admin_service.AddEvaluationResp
	4,   // 107: hr_admin_service.HrService.DeleteEvaluation:output_type -> hr_admin_service.StatusResp
	27,  // 108: hr_admin_service.HrService.UpdateEvaluation:output_type -> hr_admin_service.UpdateEvaluationResp
	29,  // 109: hr_admin_service.HrService.GetEvaluationInfo:output_type -> hr_admin_service.GetEvaluationInfoResp
	30,  // 110: hr_admin_service.HrService.GetEvaluations:output_type -> hr_admin_service.GetEvaluationsResp
	34,  // 111: hr_admin_service.HrService.CreateQuestion:output_type -> hr_admin_service.CreateQuestionResp
	4,   // 112: hr_admin_service.HrService.DeleteQuestion:output_type -> hr_admin_service.StatusResp
	37,  // 113: hr_admin_service.HrService.UpdateQuestion:output_type -> hr_admin_service.UpdateQuestionResp
	39,  // 114: hr_admin_service.HrService.GetQuestions:output_type -> hr_admin_service.GetQuestionsResp
	73,  // 115: hr_admin_service.HrService.GetApplicantQuestions:output_type -> hr_admin_service.GetApplicantQuestionsResp
	43,  // 116: hr_admin_service.HrService.AdminLogin:output_type -> hr_admin_service.AdminLoginResp
	4,   // 117: hr_admin_service.HrService.AdminLogout:output_type -> hr_admin_service.StatusResp
	44,  // 118: hr_admin_service.HrService.GetAdminInfo:output_type -> hr_admin_service.GetAdminInfoResp
	4,   // 119: hr_admin_service.HrService.SetDefaultStandard:output_type -> hr_admin_service.StatusResp
	83,  // 120: hr_admin_service.HrService.GetOAuthConfig:output_type -> hr_admin_service.GetOAuthConfigResp
	86,  // 121: hr_admin_service.HrService.GetFrontendConfig:output_type -> hr_admin_service.GetFrontendConfigResp
	47,  // 122: hr_admin_service.HrService.GetRank:output_type -> hr_admin_service.GetRankResp
	49,  // 123: hr_admin_service.HrService.GetScore:output_type -> hr_admin_service.GetScoreResp
	51,  // 124: hr_admin_service.HrService.PostScore:output_type -> hr_admin_service.PostScoreResp
	4,   // 125: hr_admin_service.HrService.DeleteScore:output_type -> hr_admin_service.StatusResp
	54,  // 126: hr_admin_service.HrService.GetRemark:output_type -> hr_admin_service.GetRemarkResp
	56,  // 127: hr_admin_service.HrService.PostRemark:output_type -> hr_admin_service.PostRemarkResp
	4,   // 128: hr_admin_service.HrService.DeleteRemark:output_type -> hr_admin_service.StatusResp
	76,  // 129: hr_admin_service.HrService.GetRemarkList:output_type -> hr_admin_service.GetRemarkListResp
	60,  // 130: hr_admin_service.HrService.GetStatisticsClassify:output_type -> hr_admin_service.GetStatisticsClassifyResp
	62,  // 131: hr_admin_service.HrService.GetStatisticsDailyNew:output_type -> hr_admin_service.GetStatisticsDailyNewResp
	65,  // 132: hr_admin_service.HrService.PostTimeConfig:output_type -> hr_admin_service.PostTimeConfigResp
	67,  // 133: hr_admin_service.HrService.ExportTimes:output_type -> hr_admin_service.ExportTimesResp
	4,   // 134: hr_admin_service.HrService.UploadTimes:output_type -> hr_admin_service.StatusResp
	4,   // 135: hr_admin_service.HrService.ClearTimes:output_type -> hr_admin_service.StatusResp
	72,  // 136: hr_admin_service.HrService.GetTimesStatistics:output_type -> hr_admin_service.GetTimesStatisticsResp
	105, // 137: hr_admin_service.HrService.GetSchedule:output_type -> hr_admin_service.GetScheduleResp
	78,  // 138: hr_admin_service.HrService.GetSmsConfig:output_type -> hr_admin_service.GetSmsConfigResp
	81,  // 139: hr_admin_service.HrService.GetApplicantSms:output_type -> hr_admin_service.GetApplicantSmsResp
	4,   // 140: hr_admin_service.HrService.SendSms:output_type -> hr_admin_service.StatusResp
	85,  // 141: hr_admin_service.HrService.GetHistorySms:output_type -> hr_admin_service.GetHistorySmsResp
	88,  // 142: hr_admin_service.HrService.ReceiveSms:output_type -> hr_admin_service.ReceiveSmsResp
	90,  // 143: hr_admin_service.HrService.GetConfig:output_type -> hr_admin_service.GetConfigResp
	92,  // 144: hr_admin_service.HrService.UpdateConfig:output_type -> hr_admin_service.UpdateConfigResp
	93,  // 145: hr_admin_service.HrService.GetSmsServiceConfig:output_type -> hr_admin_service.GetSmsServiceConfigResp
	95,  // 146: hr_admin_service.HrService.GetAllRoom:output_type -> hr_admin_service.GetAllRoomResp
	4,   // 147: hr_admin_service.HrService.SetMyRoom:output_type -> hr_admin_service.StatusResp
	98,  // 148: hr_admin_service.HrService.GetPushableList:output_type -> hr_admin_service.GetPushableListResp
	4,   // 149: hr_admin_service.HrService.PushApplicant:output_type -> hr_admin_service.StatusResp
	4,   // 150: hr_admin_service.HrService.SetRoomStatus:output_type -> hr_admin_service.StatusResp
	4,   // 151: hr_admin_service.HrService.SetRoomComment:output_type -> hr_admin_service.StatusResp
	4,   // 152: hr_admin_service.HrService.SetRoomGroup:output_type -> hr_admin_service.StatusResp
	98,  // [98:153] is the sub-list for method output_type
	43,  // [43:98] is the sub-list for method input_type
	43,  // [43:43] is the sub-list for extension type_name
	43,  // [43:43] is the sub-list for extension extendee
	0,   // [0:43] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicantIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetApplicantAdmitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Intent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbstractAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Admit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Applicant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicantListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantNameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantScoresResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApplicantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Standard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEvaluationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Evaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEvaluationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEvaluationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEvaluationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEvaluationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEvaluationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionAndAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuestionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuestionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Admin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultStandardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRankResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemarkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRemarkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsClassifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsClassify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsClassifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsDaily); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsDailyNewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTimeConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTimeConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportTimesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportTimesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadTimesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearTimesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimesStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantQuestionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemarkListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Remark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemarkListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetApplicantTimeExtendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmsConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantSmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicantSms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApplicantSmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOAuthConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistorySms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistorySmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontendConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveSmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveSmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmsServiceConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushableApplicant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushableListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushApplicantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoomStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoomGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoomCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeTableItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   107,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_rawDesc = nil
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
