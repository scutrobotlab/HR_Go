// Code generated by goctl. DO NOT EDIT.
// Source: hr.proto

package server

import (
	"context"

	"HR_Go/hr-service/internal/logic"
	"HR_Go/hr-service/internal/svc"
	"HR_Go/hr-service/pb/hr-service"
)

type HrServiceServer struct {
	svcCtx *svc.ServiceContext
	hr_service.UnimplementedHrServiceServer
}

func NewHrServiceServer(svcCtx *svc.ServiceContext) *HrServiceServer {
	return &HrServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *HrServiceServer) Ping(ctx context.Context, in *hr_service.PingRequest) (*hr_service.PingResponse, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// announce
func (s *HrServiceServer) GetAnnounceStatus(ctx context.Context, in *hr_service.GetAnnounceStatusReq) (*hr_service.GetAnnounceStatusResp, error) {
	l := logic.NewGetAnnounceStatusLogic(ctx, s.svcCtx)
	return l.GetAnnounceStatus(in)
}

// exam
func (s *HrServiceServer) GetExam(ctx context.Context, in *hr_service.GetExamReq) (*hr_service.GetExamResp, error) {
	l := logic.NewGetExamLogic(ctx, s.svcCtx)
	return l.GetExam(in)
}

func (s *HrServiceServer) PostExam(ctx context.Context, in *hr_service.PostExamReq) (*hr_service.PostExamResp, error) {
	l := logic.NewPostExamLogic(ctx, s.svcCtx)
	return l.PostExam(in)
}

func (s *HrServiceServer) GetGuide(ctx context.Context, in *hr_service.GetGuideReq) (*hr_service.GetGuideResp, error) {
	l := logic.NewGetGuideLogic(ctx, s.svcCtx)
	return l.GetGuide(in)
}

// form
func (s *HrServiceServer) GetFormFormat(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetFormFormatResp, error) {
	l := logic.NewGetFormFormatLogic(ctx, s.svcCtx)
	return l.GetFormFormat(in)
}

func (s *HrServiceServer) GetFormGroups(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetFormGroupsResp, error) {
	l := logic.NewGetFormGroupsLogic(ctx, s.svcCtx)
	return l.GetFormGroups(in)
}

func (s *HrServiceServer) GetFormIntent(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetFormIntentResp, error) {
	l := logic.NewGetFormIntentLogic(ctx, s.svcCtx)
	return l.GetFormIntent(in)
}

// join-us
func (s *HrServiceServer) Login(ctx context.Context, in *hr_service.LoginReq) (*hr_service.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *HrServiceServer) GetWechatInfo(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetWechatInfoResp, error) {
	l := logic.NewGetWechatInfoLogic(ctx, s.svcCtx)
	return l.GetWechatInfo(in)
}

func (s *HrServiceServer) PostApply(ctx context.Context, in *hr_service.PostApplyReq) (*hr_service.PostApplyResp, error) {
	l := logic.NewPostApplyLogic(ctx, s.svcCtx)
	return l.PostApply(in)
}

func (s *HrServiceServer) GetCanJoin(ctx context.Context, in *hr_service.GetCanJoinReq) (*hr_service.GetCanJoinResp, error) {
	l := logic.NewGetCanJoinLogic(ctx, s.svcCtx)
	return l.GetCanJoin(in)
}

func (s *HrServiceServer) GetMyForm(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetMyFormResp, error) {
	l := logic.NewGetMyFormLogic(ctx, s.svcCtx)
	return l.GetMyForm(in)
}

func (s *HrServiceServer) GetMyResult(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetMyResultResp, error) {
	l := logic.NewGetMyResultLogic(ctx, s.svcCtx)
	return l.GetMyResult(in)
}

func (s *HrServiceServer) GetMyStep(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetMyStepResp, error) {
	l := logic.NewGetMyStepLogic(ctx, s.svcCtx)
	return l.GetMyStep(in)
}

func (s *HrServiceServer) GetIntentList(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetIntentListResp, error) {
	l := logic.NewGetIntentListLogic(ctx, s.svcCtx)
	return l.GetIntentList(in)
}

func (s *HrServiceServer) GetTime(ctx context.Context, in *hr_service.GetTimeReq) (*hr_service.GetTimeResp, error) {
	l := logic.NewGetTimeLogic(ctx, s.svcCtx)
	return l.GetTime(in)
}

func (s *HrServiceServer) SelectTime(ctx context.Context, in *hr_service.SelectTimeReq) (*hr_service.SelectTimeResp, error) {
	l := logic.NewSelectTimeLogic(ctx, s.svcCtx)
	return l.SelectTime(in)
}

func (s *HrServiceServer) GetReview(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetReviewResp, error) {
	l := logic.NewGetReviewLogic(ctx, s.svcCtx)
	return l.GetReview(in)
}

// time-config
func (s *HrServiceServer) GetTimeConfig(ctx context.Context, in *hr_service.ApplicantIdReq) (*hr_service.GetTimeConfigResp, error) {
	l := logic.NewGetTimeConfigLogic(ctx, s.svcCtx)
	return l.GetTimeConfig(in)
}
